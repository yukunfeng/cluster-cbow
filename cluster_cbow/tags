!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Args	src/args.cc	/^Args::Args() {$/;"	f	class:fasttext::Args
Args	src/args.h	/^class Args {$/;"	c	namespace:fasttext
BOW	python/fastText/FastText.py	/^BOW = "<"$/;"	v
BOW	python/fastText/__init__.py	/^from .FastText import BOW$/;"	i
BOW	src/dictionary.cc	/^const std::string Dictionary::BOW = "<";$/;"	m	class:fasttext::Dictionary	file:
BOW	src/dictionary.h	/^  static const std::string BOW;$/;"	m	class:fasttext::entry_type::Dictionary
BuildExt	setup.py	/^class BuildExt(build_ext):$/;"	c
Button.defaultProps.target	website/pages/en/index.js	/^Button.defaultProps = {$/;"	p
CXX	Makefile	/^CXX = c++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -pthread -std=c++0x -march=native$/;"	m
Counter	embs/map.py	/^from collections import Counter$/;"	i
Dictionary	src/dictionary.cc	/^Dictionary::Dictionary(std::shared_ptr<Args> args)$/;"	f	class:fasttext::Dictionary
Dictionary	src/dictionary.cc	/^Dictionary::Dictionary(std::shared_ptr<Args> args, std::istream& in)$/;"	f	class:fasttext::Dictionary
Dictionary	src/dictionary.h	/^class Dictionary {$/;"	c	class:fasttext::entry_type
EOS	python/fastText/FastText.py	/^EOS = "<\/s>"$/;"	v
EOS	python/fastText/__init__.py	/^from .FastText import EOS$/;"	i
EOS	scripts/kbcompletion/eval.cpp	/^std::string EOS = "<\/s>";$/;"	v
EOS	src/dictionary.cc	/^const std::string Dictionary::EOS = "<\/s>";$/;"	m	class:fasttext::Dictionary	file:
EOS	src/dictionary.h	/^  static const std::string EOS;$/;"	m	class:fasttext::entry_type::Dictionary
EOW	python/fastText/FastText.py	/^EOW = ">"$/;"	v
EOW	python/fastText/__init__.py	/^from .FastText import EOW$/;"	i
EOW	src/dictionary.cc	/^const std::string Dictionary::EOW = ">";$/;"	m	class:fasttext::Dictionary	file:
EOW	src/dictionary.h	/^  static const std::string EOW;$/;"	m	class:fasttext::entry_type::Dictionary
EmbeddingBag	python/doc/examples/FastTextEmbeddingBag.py	/^from torch.nn.modules.sparse import EmbeddingBag$/;"	i
Estep	src/productquantizer.cc	/^void ProductQuantizer::Estep($/;"	f	class:fasttext::ProductQuantizer
Extension	setup.py	/^from setuptools import setup, Extension$/;"	i
FASTTEXT_DEPRECATED	src/utils.h	16;"	d
FASTTEXT_DEPRECATED	src/utils.h	18;"	d
FASTTEXT_DEPRECATED	src/utils.h	20;"	d
FASTTEXT_FILEFORMAT_MAGIC_INT32	src/fasttext.cc	/^constexpr int32_t FASTTEXT_FILEFORMAT_MAGIC_INT32 = 793712314;$/;"	m	namespace:fasttext	file:
FASTTEXT_SRC	setup.py	/^FASTTEXT_SRC = "src"$/;"	v
FASTTEXT_VERSION	src/fasttext.cc	/^constexpr int32_t FASTTEXT_VERSION = 12; \/* Version 1b *\/$/;"	m	namespace:fasttext	file:
FastText	src/fasttext.cc	/^FastText::FastText() : quant_(false), wordVectors_(nullptr) {}$/;"	f	class:fasttext::FastText
FastText	src/fasttext.h	/^class FastText {$/;"	c	namespace:fasttext
FastTextEmbeddingBag	python/doc/examples/FastTextEmbeddingBag.py	/^class FastTextEmbeddingBag(EmbeddingBag):$/;"	c
INCLUDES	Makefile	/^INCLUDES = -I.$/;"	m
LOG_TABLE_SIZE	src/model.cc	/^constexpr int64_t LOG_TABLE_SIZE = 512;$/;"	m	namespace:fasttext	file:
MAX_LINE_SIZE	src/dictionary.h	/^  static const int32_t MAX_LINE_SIZE = 1024;$/;"	m	class:fasttext::entry_type::Dictionary
MAX_SIGMOID	src/model.cc	/^constexpr int64_t MAX_SIGMOID = 8;$/;"	m	namespace:fasttext	file:
MAX_VOCAB_SIZE	src/dictionary.h	/^  static const int32_t MAX_VOCAB_SIZE = 30000000;$/;"	m	class:fasttext::entry_type::Dictionary
MStep	src/productquantizer.cc	/^void ProductQuantizer::MStep($/;"	f	class:fasttext::ProductQuantizer
Matrix	src/matrix.cc	/^Matrix::Matrix() : Matrix(0, 0) {}$/;"	f	class:fasttext::Matrix
Matrix	src/matrix.cc	/^Matrix::Matrix(int64_t m, int64_t n) : data_(m * n), m_(m), n_(n) {}$/;"	f	class:fasttext::Matrix
Matrix	src/matrix.h	/^class Matrix {$/;"	c	namespace:fasttext
Meter	src/meter.h	/^  Meter() : metrics_(), nexamples_(0), labelMetrics_() {}$/;"	f	class:fasttext::Meter
Meter	src/meter.h	/^class Meter {$/;"	c	namespace:fasttext
Metrics	src/meter.h	/^    Metrics() : gold(0), predicted(0), predictedGold(0) {}$/;"	f	struct:fasttext::Meter::Metrics
Metrics	src/meter.h	/^  struct Metrics {$/;"	s	class:fasttext::Meter
Model	src/model.cc	/^Model::Model($/;"	f	class:fasttext::Model
Model	src/model.h	/^class Model {$/;"	c	namespace:fasttext
NAVTREE	website/static/docs/en/html/navtreedata.js	/^var NAVTREE =$/;"	v
NAVTREEINDEX	website/static/docs/en/html/navtreedata.js	/^var NAVTREEINDEX =$/;"	v
NAVTREEINDEX0.annotated.html	website/static/docs/en/html/navtreeindex0.js	/^{$/;"	p
NAVTREEINDEX1.classfasttext_1_1QMatrix.html#ae10f3f12bf4c8483381ecb122b7fda5a	website/static/docs/en/html/navtreeindex1.js	/^{$/;"	p
NEGATIVE_TABLE_SIZE	src/model.h	/^  static const int32_t NEGATIVE_TABLE_SIZE = 10000000;$/;"	m	class:fasttext::Model
Node	src/model.h	/^struct Node {$/;"	s	namespace:fasttext
OBJS	Makefile	/^OBJS = args.o dictionary.o productquantizer.o matrix.o qmatrix.o vector.o model.o utils.o meter.o fasttext.o$/;"	m
PYBIND11_MODULE	python/fastText/pybind/fasttext_pybind.cc	/^PYBIND11_MODULE(fasttext_pybind, m) {$/;"	f
ProductQuantizer	src/productquantizer.cc	/^ProductQuantizer::ProductQuantizer(int32_t dim, int32_t dsub)$/;"	f	class:fasttext::ProductQuantizer
ProductQuantizer	src/productquantizer.h	/^  ProductQuantizer() {}$/;"	f	class:fasttext::ProductQuantizer
ProductQuantizer	src/productquantizer.h	/^class ProductQuantizer {$/;"	c	namespace:fasttext
QMatrix	src/qmatrix.cc	/^QMatrix::QMatrix() : qnorm_(false), m_(0), n_(0), codesize_(0) {}$/;"	f	class:fasttext::QMatrix
QMatrix	src/qmatrix.cc	/^QMatrix::QMatrix(const Matrix& mat, int32_t dsub, bool qnorm)$/;"	f	class:fasttext::QMatrix
QMatrix	src/qmatrix.h	/^class QMatrix {$/;"	c	namespace:fasttext
R	alignment/align.py	/^        R = proj_spectral(R)$/;"	v
R	alignment/align.py	/^R = procrustes(X_src, Y_tgt)$/;"	v
R_src	alignment/eval.py	/^    R_src = load_transform(params.src_mat)$/;"	v
R_tgt	alignment/eval.py	/^    R_tgt = load_transform(params.tgt_mat)$/;"	v
SIGMOID_TABLE_SIZE	src/model.cc	/^constexpr int64_t SIGMOID_TABLE_SIZE = 512;$/;"	m	namespace:fasttext	file:
SYNCOFFMSG	website/static/docs/en/html/navtreedata.js	/^var SYNCOFFMSG = 'click to enable panel synchronisation';/;"	v
SYNCONMSG	website/static/docs/en/html/navtreedata.js	/^var SYNCONMSG = 'click to disable panel synchronisation';$/;"	v
SearchBox	website/static/docs/en/html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchBox.Activate	website/static/docs/en/html/search/search.js	/^  this.Activate = function(isActive)$/;"	m
SearchBox.CloseResultsWindow	website/static/docs/en/html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m
SearchBox.CloseSelectionWindow	website/static/docs/en/html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m
SearchBox.DOMPopupSearchResults	website/static/docs/en/html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m
SearchBox.DOMPopupSearchResultsWindow	website/static/docs/en/html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m
SearchBox.DOMSearchBox	website/static/docs/en/html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m
SearchBox.DOMSearchClose	website/static/docs/en/html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m
SearchBox.DOMSearchField	website/static/docs/en/html/search/search.js	/^  this.DOMSearchField = function()$/;"	m
SearchBox.DOMSearchSelect	website/static/docs/en/html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m
SearchBox.DOMSearchSelectWindow	website/static/docs/en/html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m
SearchBox.OnSearchFieldChange	website/static/docs/en/html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m
SearchBox.OnSearchFieldFocus	website/static/docs/en/html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m
SearchBox.OnSearchSelectHide	website/static/docs/en/html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m
SearchBox.OnSearchSelectKey	website/static/docs/en/html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m
SearchBox.OnSearchSelectShow	website/static/docs/en/html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m
SearchBox.OnSelectItem	website/static/docs/en/html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m
SearchBox.Search	website/static/docs/en/html/search/search.js	/^  this.Search = function()$/;"	m
SearchBox.SelectItemCount	website/static/docs/en/html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m
SearchBox.SelectItemSet	website/static/docs/en/html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m
SearchResults	website/static/docs/en/html/search/search.js	/^function SearchResults(name)$/;"	c
SearchResults.FindChildElement	website/static/docs/en/html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m
SearchResults.Nav	website/static/docs/en/html/search/search.js	/^    this.Nav = function(evt,itemIndex)$/;"	m
SearchResults.NavChild	website/static/docs/en/html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m
SearchResults.NavNext	website/static/docs/en/html/search/search.js	/^    this.NavNext = function(index)$/;"	m
SearchResults.NavPrev	website/static/docs/en/html/search/search.js	/^    this.NavPrev = function(index)$/;"	m
SearchResults.ProcessKeys	website/static/docs/en/html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m
SearchResults.Search	website/static/docs/en/html/search/search.js	/^    this.Search = function(search)$/;"	m
SearchResults.Toggle	website/static/docs/en/html/search/search.js	/^    this.Toggle = function(id)$/;"	m
TestFastTextPy	python/fastText/tests/test_script.py	/^    class TestFastTextPy(unittest.TestCase):$/;"	c	function:gen_tests
TestFastTextUnitPy	python/fastText/tests/test_script.py	/^class TestFastTextUnitPy(unittest.TestCase):$/;"	c
Variable	python/doc/examples/FastTextEmbeddingBag.py	/^from torch.autograd import Variable$/;"	i
Vector	src/vector.cc	/^Vector::Vector(int64_t m) : data_(m) {}$/;"	f	class:fasttext::Vector
Vector	src/vector.h	/^class Vector {$/;"	c	namespace:fasttext
Z_src	alignment/align.py	/^Z_src = x_src[:params.maxneg, :]$/;"	v
Z_tgt	alignment/align.py	/^Z_tgt = x_tgt[:params.maxneg, :]$/;"	v
_FastText	python/fastText/FastText.py	/^class _FastText():$/;"	c
__init__	python/doc/examples/FastTextEmbeddingBag.py	/^    def __init__(self, model_path):$/;"	m	class:FastTextEmbeddingBag
__init__	python/fastText/FastText.py	/^    def __init__(self, model=None):$/;"	m	class:_FastText
__init__	setup.py	/^    def __init__(self, user=False):$/;"	m	class:get_pybind_include
__str__	setup.py	/^    def __str__(self):$/;"	m	class:get_pybind_include	file:
__version__	setup.py	/^__version__ = '0.8.22'$/;"	v
_build_args	python/fastText/FastText.py	/^def _build_args(args):$/;"	f
_get_readme	setup.py	/^def _get_readme():$/;"	f
_parse_loss_string	python/fastText/FastText.py	/^def _parse_loss_string(string):$/;"	f
_parse_model_string	python/fastText/FastText.py	/^def _parse_model_string(string):$/;"	f
_preventDefault	website/static/docs/en/html/resize.js	/^  var _preventDefault = function(evt) { evt.preventDefault(); };$/;"	f
a	python/fastText/FastText.py	/^    a = _build_args(locals())$/;"	v
a.onclick	website/static/docs/en/html/navtree.js	/^      a.href = srcPage!=targetPage ? url : "javascript:void(0)";$/;"	f
absolute_import	eval.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/benchmarks/get_word_vector.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/doc/examples/FastTextEmbeddingBag.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/doc/examples/bin_to_vec.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/doc/examples/bin_to_vec.py	/^from __future__ import division, absolute_import, print_function$/;"	i
absolute_import	python/doc/examples/compute_accuracy.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/doc/examples/compute_accuracy.py	/^from __future__ import division, absolute_import, print_function$/;"	i
absolute_import	python/doc/examples/get_vocab.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/doc/examples/get_vocab.py	/^from __future__ import division, absolute_import, print_function$/;"	i
absolute_import	python/doc/examples/train_supervised.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/doc/examples/train_unsupervised.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/doc/examples/train_unsupervised.py	/^from __future__ import division, absolute_import, print_function$/;"	i
absolute_import	python/fastText/FastText.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/fastText/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/fastText/tests/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/fastText/tests/test_configurations.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/fastText/tests/test_script.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/fastText/util/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	python/fastText/util/util.py	/^from __future__ import absolute_import$/;"	i
absolute_import	runtests.py	/^from __future__ import absolute_import$/;"	i
absolute_import	setup.py	/^from __future__ import absolute_import$/;"	i
action	eval.py	/^    action='store',$/;"	v
action	python/doc/examples/get_vocab.py	/^        action='store_true',$/;"	v
action	runtests.py	/^        action="store_true"$/;"	v
add	src/dictionary.cc	/^void Dictionary::add(const std::string& w) {$/;"	f	class:fasttext::Dictionary
addInputVector	src/fasttext.cc	/^void FastText::addInputVector(Vector& vec, int32_t ind) const {$/;"	f	class:fasttext::FastText
addRow	src/matrix.cc	/^void Matrix::addRow(const Vector& vec, int64_t i, real a) {$/;"	f	class:fasttext::Matrix
addRow	src/vector.cc	/^void Vector::addRow(const Matrix& A, int64_t i) {$/;"	f	class:fasttext::Vector
addRow	src/vector.cc	/^void Vector::addRow(const Matrix& A, int64_t i, real a) {$/;"	f	class:fasttext::Vector
addRow	src/vector.cc	/^void Vector::addRow(const QMatrix& A, int64_t i) {$/;"	f	class:fasttext::Vector
addSubwords	src/dictionary.cc	/^void Dictionary::addSubwords($/;"	f	class:fasttext::Dictionary
addToVector	src/qmatrix.cc	/^void QMatrix::addToVector(Vector& x, int32_t t) const {$/;"	f	class:fasttext::QMatrix
addVector	src/vector.cc	/^void Vector::addVector(const Vector& source) {$/;"	f	class:fasttext::Vector
addVector	src/vector.cc	/^void Vector::addVector(const Vector& source, real s) {$/;"	f	class:fasttext::Vector
addWordNgrams	src/dictionary.cc	/^void Dictionary::addWordNgrams($/;"	f	class:fasttext::Dictionary
addcode	src/productquantizer.cc	/^void ProductQuantizer::addcode($/;"	f	class:fasttext::ProductQuantizer
analogies	src/fasttext.cc	/^void FastText::analogies(int32_t k) {$/;"	f	class:fasttext::FastText
analogies	src/main.cc	/^void analogies(const std::vector<std::string> args) {$/;"	f
animationInProgress	website/static/docs/en/html/navtree.js	/^var animationInProgress = false;$/;"	v
annotated_dup	website/static/docs/en/html/annotated_dup.js	/^var annotated_dup =$/;"	v
argmax	src/vector.cc	/^int64_t Vector::argmax() {$/;"	f	class:fasttext::Vector
argparse	alignment/align.py	/^import argparse$/;"	i
argparse	alignment/eval.py	/^import argparse$/;"	i
argparse	eval.py	/^import argparse$/;"	i
argparse	python/benchmarks/get_word_vector.py	/^import argparse$/;"	i
argparse	python/doc/examples/bin_to_vec.py	/^import argparse$/;"	i
argparse	python/doc/examples/compute_accuracy.py	/^import argparse$/;"	i
argparse	python/doc/examples/get_vocab.py	/^import argparse$/;"	i
argparse	runtests.py	/^import argparse$/;"	i
args	eval.py	/^args = parser.parse_args()$/;"	v
args	python/benchmarks/get_word_vector.py	/^    args = parser.parse_args()$/;"	v
args	python/doc/examples/bin_to_vec.py	/^    args = parser.parse_args()$/;"	v
args	python/doc/examples/get_vocab.py	/^    args = parser.parse_args()$/;"	v
args	runtests.py	/^    args = parser.parse_args()$/;"	v
args_	src/dictionary.h	/^  std::shared_ptr<Args> args_;$/;"	m	class:fasttext::entry_type::Dictionary
args_	src/fasttext.h	/^  std::shared_ptr<Args> args_;$/;"	m	class:fasttext::FastText
args_	src/model.h	/^  std::shared_ptr<Args> args_;$/;"	m	class:fasttext::Model
args_8h	website/static/docs/en/html/args_8h.js	/^var args_8h =$/;"	v
arrowDown	website/static/docs/en/html/navtree.js	/^var arrowDown = '&#9660;';$/;"	v
arrowRight	website/static/docs/en/html/navtree.js	/^var arrowRight = '&#9658;';$/;"	v
assign_centroid	src/productquantizer.cc	/^real ProductQuantizer::assign_centroid($/;"	f	class:fasttext::ProductQuantizer
at	src/matrix.h	/^  inline const real& at(int64_t i, int64_t j) const {$/;"	f	class:fasttext::Matrix
at	src/matrix.h	/^  inline real& at(int64_t i, int64_t j) {$/;"	f	class:fasttext::Matrix
binary	src/model.h	/^  bool binary;$/;"	m	struct:fasttext::Node
binaryLogistic	src/model.cc	/^real Model::binaryLogistic(int32_t target, bool label, real lr) {$/;"	f	class:fasttext::Model
boolToString	src/args.cc	/^std::string Args::boolToString(bool b) const {$/;"	f	class:fasttext::Args
bucket	src/args.h	/^  int bucket;$/;"	m	class:fasttext::Args
buildTree	src/model.cc	/^void Model::buildTree(const std::vector<int64_t>& counts) {$/;"	f	class:fasttext::Model
build_ext	setup.py	/^from setuptools.command.build_ext import build_ext$/;"	i
build_extensions	setup.py	/^    def build_extensions(self):$/;"	m	class:BuildExt
build_supervised_model	python/fastText/tests/test_script.py	/^def build_supervised_model(data, kwargs):$/;"	f
build_test	python/fastText/tests/test_script.py	/^        def build_test(test_name, kwargs=None):$/;"	f	function:gen_unit_tests
build_unsupervised_model	python/fastText/tests/test_script.py	/^def build_unsupervised_model(data, kwargs):$/;"	f
c_opts	setup.py	/^    c_opts = {$/;"	v	class:BuildExt
cachedLink	website/static/docs/en/html/navtree.js	/^function cachedLink()$/;"	f
cbow	src/args.h	/^enum class model_name : int { cbow = 1, sg, sup };$/;"	m	class:fasttext::model_name
cbow	src/fasttext.cc	/^void FastText::cbow(Model& model, real lr, const std::vector<int32_t>& line) {$/;"	f	class:fasttext::FastText
centroids_	src/productquantizer.h	/^  std::vector<real> centroids_;$/;"	m	class:fasttext::ProductQuantizer
check	python/fastText/FastText.py	/^        def check(entry):$/;"	f	function:_FastText.get_line
check	python/fastText/FastText.py	/^        def check(entry):$/;"	f	function:_FastText.predict
check	python/fastText/tests/test_script.py	/^        def check(data):$/;"	f	function:TestFastTextUnitPy.gen_test_supervised_util_test
check	python/fastText/tests/test_script.py	/^        def check(model, model_filename, test, lessthan, msg_prefix=""):$/;"	f	function:gen_sup_test.sup_test
checkModel	src/fasttext.cc	/^bool FastText::checkModel(std::istream& in) {$/;"	f	class:fasttext::FastText
check_predict	python/fastText/tests/test_script.py	/^        def check_predict(f):$/;"	f	function:TestFastTextUnitPy.gen_test_supervised_multiline_predict
check_supervised_configuration	python/fastText/tests/test_configurations.py	/^def check_supervised_configuration(configuration, verbose=1):$/;"	f
check_supervised_configurations	python/fastText/tests/test_configurations.py	/^def check_supervised_configurations(configurations, verbose=1):$/;"	f
classfasttext_1_1Args	website/static/docs/en/html/classfasttext_1_1Args.js	/^var classfasttext_1_1Args =$/;"	v
classfasttext_1_1Dictionary	website/static/docs/en/html/classfasttext_1_1Dictionary.js	/^var classfasttext_1_1Dictionary =$/;"	v
classfasttext_1_1FastText	website/static/docs/en/html/classfasttext_1_1FastText.js	/^var classfasttext_1_1FastText =$/;"	v
classfasttext_1_1Matrix	website/static/docs/en/html/classfasttext_1_1Matrix.js	/^var classfasttext_1_1Matrix =$/;"	v
classfasttext_1_1Model	website/static/docs/en/html/classfasttext_1_1Model.js	/^var classfasttext_1_1Model =$/;"	v
classfasttext_1_1ProductQuantizer	website/static/docs/en/html/classfasttext_1_1ProductQuantizer.js	/^var classfasttext_1_1ProductQuantizer =$/;"	v
classfasttext_1_1QMatrix	website/static/docs/en/html/classfasttext_1_1QMatrix.js	/^var classfasttext_1_1QMatrix =$/;"	v
classfasttext_1_1Vector	website/static/docs/en/html/classfasttext_1_1Vector.js	/^var classfasttext_1_1Vector =$/;"	v
codes	src/model.h	/^  std::vector<std::vector<bool>> codes;$/;"	m	class:fasttext::Model
codes_	src/qmatrix.h	/^  std::vector<uint8_t> codes_;$/;"	m	class:fasttext::QMatrix
codesize_	src/qmatrix.h	/^  int32_t codesize_;$/;"	m	class:fasttext::QMatrix
collections	alignment/utils.py	/^import collections$/;"	i
collections	embs/map.py	/^import collections$/;"	i
cols	src/matrix.h	/^  inline int64_t cols() const {$/;"	f	class:fasttext::Matrix
comparePairs	src/fasttext.cc	/^bool comparePairs($/;"	f	namespace:fasttext
comparePairs	src/model.cc	/^bool Model::comparePairs($/;"	f	class:fasttext::Model
compat_splitting	eval.py	/^def compat_splitting(line):$/;"	f
computeHidden	src/model.cc	/^void Model::computeHidden(const std::vector<int32_t>& input, Vector& hidden)$/;"	f	class:fasttext::Model
computeLoss	src/model.cc	/^real Model::computeLoss($/;"	f	class:fasttext::Model
computeOutput	src/model.cc	/^void Model::computeOutput(Vector& hidden, Vector& output) const {$/;"	f	class:fasttext::Model
computeOutputSigmoid	src/model.cc	/^void Model::computeOutputSigmoid(Vector& hidden, Vector& output) const {$/;"	f	class:fasttext::Model
computeOutputSoftmax	src/model.cc	/^void Model::computeOutputSoftmax() {$/;"	f	class:fasttext::Model
computeOutputSoftmax	src/model.cc	/^void Model::computeOutputSoftmax(Vector& hidden, Vector& output) const {$/;"	f	class:fasttext::Model
computeSubwords	src/dictionary.cc	/^void Dictionary::computeSubwords($/;"	f	class:fasttext::Dictionary
compute_code	src/productquantizer.cc	/^void ProductQuantizer::compute_code(const real* x, uint8_t* code) const {$/;"	f	class:fasttext::ProductQuantizer
compute_codes	src/productquantizer.cc	/^void ProductQuantizer::compute_codes(const real* x, uint8_t* codes, int32_t n)$/;"	f	class:fasttext::ProductQuantizer
compute_csls_accuracy	alignment/utils.py	/^def compute_csls_accuracy(x_src, x_tgt, lexicon, lexicon_size=-1, k=10, bsz=1024):$/;"	f
compute_nn_accuracy	alignment/utils.py	/^def compute_nn_accuracy(x_src, x_tgt, lexicon, bsz=100, lexicon_size=-1):$/;"	f
compute_similarity	python/doc/examples/train_unsupervised.py	/^def compute_similarity(data_path):$/;"	f
const.baseUrl	website/siteConfig.js	/^  url: "https:\/\/fasttext.cc" \/* your site url *\/,$/;"	p
const.cname	website/siteConfig.js	/^  repo: "facebookresearch\/fastText" \/* repo for your project *\/,$/;"	p
const.headerLinks	website/siteConfig.js	/^  users,$/;"	p
const.repo	website/siteConfig.js	/^  baseUrl: "\/" \/* base url for your project *\/,$/;"	p
const.title	website/siteConfig.js	/^const siteConfig = {$/;"	p
const.url	website/siteConfig.js	/^  title: "fastText" \/* title for your website *\/,$/;"	p
contains	src/utils.h	/^bool contains(const std::vector<T>& container, const T& value) {$/;"	f	namespace:fasttext::utils
convertToId	website/static/docs/en/html/search/search.js	/^function convertToId(search)$/;"	f
cooking_job1	python/fastText/tests/test_configurations.py	/^def cooking_job1(thread=None):$/;"	f
cooking_job2	python/fastText/tests/test_configurations.py	/^def cooking_job2(thread=None):$/;"	f
copy	python/fastText/tests/test_script.py	/^import copy$/;"	i
corr	eval.py	/^corr = stats.spearmanr(mysim, gold)$/;"	v
count	src/dictionary.h	/^  int64_t count;$/;"	m	struct:fasttext::entry_type::entry
count	src/model.h	/^  int64_t count;$/;"	m	struct:fasttext::Node
coverage	setup.py	/^    coverage = False$/;"	v
coverage	setup.py	/^    coverage = True$/;"	v
coverage_index	setup.py	/^    coverage_index = sys.argv.index('--coverage')$/;"	v
cpp_flag	setup.py	/^def cpp_flag(compiler):$/;"	f
createIndent	website/static/docs/en/html/navtree.js	/^function createIndent(o,domNode,node,level)$/;"	f
createResults	website/static/docs/en/html/search/search.js	/^function createResults()$/;"	f
cslsproc	alignment/eval.py	/^cslsproc = compute_csls_accuracy(x_src, x_tgt, src2tgt, lexicon_size=lexicon_size)$/;"	v
cutoff	src/args.h	/^  size_t cutoff;$/;"	m	class:fasttext::Args
d	eval.py	/^        d = similarity(v1, v2)$/;"	v
data	src/matrix.h	/^  inline const real* data() const {$/;"	f	class:fasttext::Matrix
data	src/matrix.h	/^  inline real* data() {$/;"	f	class:fasttext::Matrix
data	src/vector.h	/^  inline const real* data() const {$/;"	f	class:fasttext::Vector
data	src/vector.h	/^  inline real* data() {$/;"	f	class:fasttext::Vector
data_	src/matrix.h	/^  std::vector<real> data_;$/;"	m	class:fasttext::Matrix
data_	src/vector.h	/^  std::vector<real> data_;$/;"	m	class:fasttext::Vector
dataset	eval.py	/^dataset = os.path.basename(args.dataPath)$/;"	v
default	python/doc/examples/get_vocab.py	/^        default=False,$/;"	v
default	runtests.py	/^        default=1,$/;"	v
default_kwargs	python/fastText/tests/test_script.py	/^def default_kwargs(kwargs):$/;"	f
define-members	website/static/docs/en/html/fasttext_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	website/static/docs/en/html/model_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
deleteLink	website/static/docs/en/html/navtree.js	/^function deleteLink()$/;"	f
description	python/doc/examples/bin_to_vec.py	/^        description=("Print fasttext .vec file to stdout from .bin file")$/;"	v
description	python/doc/examples/get_vocab.py	/^        description=($/;"	v
dest	eval.py	/^    dest='dataPath',$/;"	v
dest	eval.py	/^    dest='modelPath',$/;"	v
details	website/static/docs/en/html/namespacefasttext.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
dfs	src/model.cc	/^void Model::dfs($/;"	f	class:fasttext::Model
dict_	src/fasttext.h	/^  std::shared_ptr<Dictionary> dict_;$/;"	m	class:fasttext::FastText
dictionary_8h	website/static/docs/en/html/dictionary_8h.js	/^var dictionary_8h =$/;"	v
dim	src/args.h	/^  int dim;$/;"	m	class:fasttext::Args
dim_	src/productquantizer.h	/^  int32_t dim_;$/;"	m	class:fasttext::ProductQuantizer
dir_68267d1309a1af8e8297ef4c3efbcdba	website/static/docs/en/html/dir_68267d1309a1af8e8297ef4c3efbcdba.js	/^var dir_68267d1309a1af8e8297ef4c3efbcdba =$/;"	v
discard	src/dictionary.cc	/^bool Dictionary::discard(int32_t id, real rand) const {$/;"	f	class:fasttext::Dictionary
distL2	src/productquantizer.cc	/^real distL2(const real* x, const real* y, int32_t d) {$/;"	f	namespace:fasttext
divideRow	src/matrix.cc	/^void Matrix::divideRow(const Vector& denoms, int64_t ib, int64_t ie) {$/;"	f	class:fasttext::Matrix
division	eval.py	/^from __future__ import division$/;"	i
division	python/benchmarks/get_word_vector.py	/^from __future__ import division$/;"	i
division	python/doc/examples/FastTextEmbeddingBag.py	/^from __future__ import division$/;"	i
division	python/doc/examples/bin_to_vec.py	/^from __future__ import division$/;"	i
division	python/doc/examples/bin_to_vec.py	/^from __future__ import division, absolute_import, print_function$/;"	i
division	python/doc/examples/compute_accuracy.py	/^from __future__ import division$/;"	i
division	python/doc/examples/compute_accuracy.py	/^from __future__ import division, absolute_import, print_function$/;"	i
division	python/doc/examples/get_vocab.py	/^from __future__ import division$/;"	i
division	python/doc/examples/get_vocab.py	/^from __future__ import division, absolute_import, print_function$/;"	i
division	python/doc/examples/train_supervised.py	/^from __future__ import division$/;"	i
division	python/doc/examples/train_unsupervised.py	/^from __future__ import division$/;"	i
division	python/doc/examples/train_unsupervised.py	/^from __future__ import division, absolute_import, print_function$/;"	i
division	python/fastText/FastText.py	/^from __future__ import division$/;"	i
division	python/fastText/__init__.py	/^from __future__ import division$/;"	i
division	python/fastText/tests/__init__.py	/^from __future__ import division$/;"	i
division	python/fastText/tests/test_configurations.py	/^from __future__ import division$/;"	i
division	python/fastText/tests/test_script.py	/^from __future__ import division$/;"	i
division	python/fastText/util/__init__.py	/^from __future__ import division$/;"	i
division	python/fastText/util/util.py	/^from __future__ import division$/;"	i
division	runtests.py	/^from __future__ import division$/;"	i
division	setup.py	/^from __future__ import division$/;"	i
dotRow	src/matrix.cc	/^real Matrix::dotRow(const Vector& vec, int64_t i) const {$/;"	f	class:fasttext::Matrix
dotRow	src/qmatrix.cc	/^real QMatrix::dotRow(const Vector& vec, int64_t i) const {$/;"	f	class:fasttext::QMatrix
drop	eval.py	/^        drop = drop + 1.0$/;"	v
drop	eval.py	/^drop = 0.0$/;"	v
dsub	src/args.h	/^  size_t dsub;$/;"	m	class:fasttext::Args
dsub_	src/productquantizer.h	/^  int32_t dsub_;$/;"	m	class:fasttext::ProductQuantizer
dump	src/args.cc	/^void Args::dump(std::ostream& out) const {$/;"	f	class:fasttext::Args
dump	src/dictionary.cc	/^void Dictionary::dump(std::ostream& out) const {$/;"	f	class:fasttext::Dictionary
dump	src/main.cc	/^void dump(const std::vector<std::string>& args) {$/;"	f
dump	src/matrix.cc	/^void Matrix::dump(std::ostream& out) const {$/;"	f	class:fasttext::Matrix
entry	src/dictionary.h	/^struct entry {$/;"	s	class:fasttext::entry_type
entry_type	src/dictionary.h	/^enum class entry_type : int8_t { word = 0, label = 1 };$/;"	c	namespace:fasttext
enum-members	website/static/docs/en/html/args_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	website/static/docs/en/html/dictionary_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	website/static/docs/en/html/namespacefasttext.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
epoch	src/args.h	/^  int epoch;$/;"	m	class:fasttext::Args
eprint	python/fastText/tests/test_script.py	/^def eprint(cls, *args, **kwargs):$/;"	f
eps_	src/productquantizer.h	/^  const real eps_ = 1e-7;$/;"	m	class:fasttext::ProductQuantizer
errno	python/doc/examples/bin_to_vec.py	/^import errno$/;"	i
errno	python/doc/examples/get_vocab.py	/^import errno$/;"	i
expandNode	website/static/docs/en/html/navtree.js	/^function expandNode(o, node, imm, showRoot)$/;"	f
ext_modules	setup.py	/^ext_modules = [$/;"	v
extra_params	embs/map.py	/^        extra_params = sys.argv[1:]$/;"	v
f	python/doc/examples/bin_to_vec.py	/^    f = load_model(args.model)$/;"	v
f	python/doc/examples/get_vocab.py	/^    f = load_model(args.model)$/;"	v
f1Score	src/meter.cc	/^double Meter::f1Score(int32_t i) {$/;"	f	class:fasttext::Meter
f1Score	src/meter.h	/^    double f1Score() const {$/;"	f	struct:fasttext::Meter::Metrics
fastText	python/fastText/tests/test_script.py	/^import fastText$/;"	i
fasttext	python/fastText/FastText.py	/^import fasttext_pybind as fasttext$/;"	i
fasttext	src/args.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/args.h	/^namespace fasttext {$/;"	n
fasttext	src/dictionary.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/dictionary.h	/^namespace fasttext {$/;"	n
fasttext	src/fasttext.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/fasttext.h	/^namespace fasttext {$/;"	n
fasttext	src/matrix.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/matrix.h	/^namespace fasttext {$/;"	n
fasttext	src/meter.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/meter.h	/^namespace fasttext {$/;"	n
fasttext	src/model.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/model.h	/^namespace fasttext {$/;"	n
fasttext	src/productquantizer.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/productquantizer.h	/^namespace fasttext {$/;"	n
fasttext	src/qmatrix.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/qmatrix.h	/^namespace fasttext {$/;"	n
fasttext	src/real.h	/^namespace fasttext {$/;"	n
fasttext	src/utils.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/utils.h	/^namespace fasttext {$/;"	n
fasttext	src/vector.cc	/^namespace fasttext {$/;"	n	file:
fasttext	src/vector.h	/^namespace fasttext {$/;"	n
fasttext_8h	website/static/docs/en/html/fasttext_8h.js	/^var fasttext_8h =$/;"	v
fasttext_src_cc	setup.py	/^fasttext_src_cc = list($/;"	v
fasttext_src_cc	setup.py	/^fasttext_src_cc = list(filter(lambda x: x.endswith('.cc'), fasttext_src_files))$/;"	v
fasttext_src_files	setup.py	/^fasttext_src_files = map(str, os.listdir(FASTTEXT_SRC))$/;"	v
fh	embs/map.py	/^            fh = open(file_path, 'r')$/;"	v
fh	embs/map.py	/^        fh = sys.stdin$/;"	v
fh_list	embs/map.py	/^    fh_list = []$/;"	v
files	website/static/docs/en/html/dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	website/static/docs/en/html/files.js	/^var files =$/;"	v
fin	eval.py	/^fin = open(args.dataPath, 'rb')$/;"	v
fin	eval.py	/^fin = open(args.modelPath, 'rb')$/;"	v
find	src/dictionary.cc	/^int32_t Dictionary::find(const std::string& w) const {$/;"	f	class:fasttext::Dictionary
find	src/dictionary.cc	/^int32_t Dictionary::find(const std::string& w, uint32_t h) const {$/;"	f	class:fasttext::Dictionary
findKBest	src/model.cc	/^void Model::findKBest($/;"	f	class:fasttext::Model
findNN	src/fasttext.cc	/^void FastText::findNN($/;"	f	class:fasttext::FastText
find_nearest_neighbor	python/fastText/util/__init__.py	/^from .util import find_nearest_neighbor$/;"	i
find_nearest_neighbor	python/fastText/util/util.py	/^def find_nearest_neighbor(query, vectors, ban_set, cossims=None):$/;"	f
flickr_job	python/fastText/tests/test_configurations.py	/^def flickr_job(thread=None):$/;"	f
forward	python/doc/examples/FastTextEmbeddingBag.py	/^    def forward(self, words):$/;"	m	class:FastTextEmbeddingBag
ft	python/fastText/FastText.py	/^    ft = _FastText()$/;"	v
ft_emb	python/doc/examples/FastTextEmbeddingBag.py	/^    ft_emb = FastTextEmbeddingBag("fil9.bin")$/;"	v
ft_word_emb	python/doc/examples/FastTextEmbeddingBag.py	/^            ft_word_emb = model.get_word_vector(word)$/;"	v
func-members	website/static/docs/en/html/main_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	website/static/docs/en/html/namespacefasttext.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	website/static/docs/en/html/namespacefasttext_1_1utils.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	website/static/docs/en/html/productquantizer_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	website/static/docs/en/html/utils_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	website/static/docs/en/html/utils_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	website/static/docs/en/html/vector_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	website/static/docs/en/html/vector_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
functions_dup	website/static/docs/en/html/functions_dup.js	/^var functions_dup =$/;"	v
gen_out	run_nmt.sh	/^function gen_out() {$/;"	f
gen_out	run_short_lang.sh	/^function gen_out() {$/;"	f
gen_sup_test	python/fastText/tests/test_script.py	/^def gen_sup_test(configuration, data_dir):$/;"	f
gen_test_get_vector	python/fastText/tests/test_script.py	/^    def gen_test_get_vector(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_multi_get_line	python/fastText/tests/test_script.py	/^    def gen_test_multi_get_line(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_newline_predict_sentence	python/fastText/tests/test_script.py	/^    def gen_test_newline_predict_sentence(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_subword_vector	python/fastText/tests/test_script.py	/^    def gen_test_subword_vector(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_subwords	python/fastText/tests/test_script.py	/^    def gen_test_subwords(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_supervised_dimension	python/fastText/tests/test_script.py	/^    def gen_test_supervised_dimension(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_supervised_exercise_is_quant	python/fastText/tests/test_script.py	/^    def gen_test_supervised_exercise_is_quant(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_supervised_get_labels	python/fastText/tests/test_script.py	/^    def gen_test_supervised_get_labels(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_supervised_get_words	python/fastText/tests/test_script.py	/^    def gen_test_supervised_get_words(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_supervised_multiline_predict	python/fastText/tests/test_script.py	/^    def gen_test_supervised_multiline_predict(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_supervised_predict	python/fastText/tests/test_script.py	/^    def gen_test_supervised_predict(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_supervised_util_test	python/fastText/tests/test_script.py	/^    def gen_test_supervised_util_test(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_tokenize	python/fastText/tests/test_script.py	/^    def gen_test_tokenize(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_unsupervised_dimension	python/fastText/tests/test_script.py	/^    def gen_test_unsupervised_dimension(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_unsupervised_exercise_is_quant	python/fastText/tests/test_script.py	/^    def gen_test_unsupervised_exercise_is_quant(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_unsupervised_get_labels	python/fastText/tests/test_script.py	/^    def gen_test_unsupervised_get_labels(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_unsupervised_get_words	python/fastText/tests/test_script.py	/^    def gen_test_unsupervised_get_words(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_test_vocab	python/fastText/tests/test_script.py	/^    def gen_test_vocab(self, kwargs):$/;"	m	class:TestFastTextUnitPy
gen_tests	python/fastText/tests/__init__.py	/^from .test_script import gen_tests$/;"	i
gen_tests	python/fastText/tests/test_script.py	/^def gen_tests(data_dir, verbose=1):$/;"	f
gen_tests	runtests.py	/^from fastText.tests import gen_tests$/;"	i
gen_unit_tests	python/fastText/tests/__init__.py	/^from .test_script import gen_unit_tests$/;"	i
gen_unit_tests	python/fastText/tests/test_script.py	/^def gen_unit_tests(verbose=0):$/;"	f
gen_unit_tests	runtests.py	/^from fastText.tests import gen_unit_tests$/;"	i
getAnalogies	src/fasttext.cc	/^std::vector<std::pair<real, std::string>> FastText::getAnalogies($/;"	f	class:fasttext::FastText
getArgs	src/fasttext.cc	/^const Args FastText::getArgs() const {$/;"	f	class:fasttext::FastText
getCounts	src/dictionary.cc	/^std::vector<int64_t> Dictionary::getCounts(entry_type type) const {$/;"	f	class:fasttext::Dictionary
getData	website/static/docs/en/html/navtree.js	/^function getData(varName)$/;"	f
getDictionary	src/fasttext.cc	/^std::shared_ptr<const Dictionary> FastText::getDictionary() const {$/;"	f	class:fasttext::FastText
getDimension	src/fasttext.cc	/^int FastText::getDimension() const {$/;"	f	class:fasttext::FastText
getId	src/dictionary.cc	/^int32_t Dictionary::getId(const std::string& w) const {$/;"	f	class:fasttext::Dictionary
getId	src/dictionary.cc	/^int32_t Dictionary::getId(const std::string& w, uint32_t h) const {$/;"	f	class:fasttext::Dictionary
getInputMatrix	src/fasttext.cc	/^std::shared_ptr<const Matrix> FastText::getInputMatrix() const {$/;"	f	class:fasttext::FastText
getInputVector	src/fasttext.h	/^  inline void getInputVector(Vector& vec, int32_t ind) {$/;"	f	class:fasttext::FastText
getLabel	src/dictionary.cc	/^std::string Dictionary::getLabel(int32_t lid) const {$/;"	f	class:fasttext::Dictionary
getLine	src/dictionary.cc	/^int32_t Dictionary::getLine($/;"	f	class:fasttext::Dictionary
getLineText	python/fastText/pybind/fasttext_pybind.cc	/^std::pair<std::vector<std::string>, std::vector<std::string>> getLineText($/;"	f
getLoss	src/model.cc	/^real Model::getLoss() const {$/;"	f	class:fasttext::Model
getM	src/qmatrix.cc	/^int64_t QMatrix::getM() const {$/;"	f	class:fasttext::QMatrix
getN	src/qmatrix.cc	/^int64_t QMatrix::getN() const {$/;"	f	class:fasttext::QMatrix
getNN	src/fasttext.cc	/^std::vector<std::pair<real, std::string>> FastText::getNN($/;"	f	class:fasttext::FastText
getNegative	src/model.cc	/^int32_t Model::getNegative(int32_t target) {$/;"	f	class:fasttext::Model
getNgramVectors	src/fasttext.cc	/^std::vector<std::pair<std::string, Vector>> FastText::getNgramVectors($/;"	f	class:fasttext::FastText
getNode	website/static/docs/en/html/navtree.js	/^function getNode(o, po)$/;"	f
getOutputMatrix	src/fasttext.cc	/^std::shared_ptr<const Matrix> FastText::getOutputMatrix() const {$/;"	f	class:fasttext::FastText
getScript	website/static/docs/en/html/navtree.js	/^function getScript(scriptName,func,show)$/;"	f
getSentenceVector	src/fasttext.cc	/^void FastText::getSentenceVector(std::istream& in, fasttext::Vector& svec) {$/;"	f	class:fasttext::FastText
getSubwordId	src/fasttext.cc	/^int32_t FastText::getSubwordId(const std::string& subword) const {$/;"	f	class:fasttext::FastText
getSubwordVector	src/fasttext.cc	/^void FastText::getSubwordVector(Vector& vec, const std::string& subword) const {$/;"	f	class:fasttext::FastText
getSubwords	src/dictionary.cc	/^const std::vector<int32_t> Dictionary::getSubwords($/;"	f	class:fasttext::Dictionary
getSubwords	src/dictionary.cc	/^const std::vector<int32_t>& Dictionary::getSubwords(int32_t i) const {$/;"	f	class:fasttext::Dictionary
getSubwords	src/dictionary.cc	/^void Dictionary::getSubwords($/;"	f	class:fasttext::Dictionary
getType	src/dictionary.cc	/^entry_type Dictionary::getType(const std::string& w) const {$/;"	f	class:fasttext::Dictionary
getType	src/dictionary.cc	/^entry_type Dictionary::getType(int32_t id) const {$/;"	f	class:fasttext::Dictionary
getVector	src/fasttext.cc	/^void FastText::getVector(Vector& vec, const std::string& word) const {$/;"	f	class:fasttext::FastText
getWord	src/dictionary.cc	/^std::string Dictionary::getWord(int32_t id) const {$/;"	f	class:fasttext::Dictionary
getWordId	src/fasttext.cc	/^int32_t FastText::getWordId(const std::string& word) const {$/;"	f	class:fasttext::FastText
getWordVector	src/fasttext.cc	/^void FastText::getWordVector(Vector& vec, const std::string& word) const {$/;"	f	class:fasttext::FastText
getXPos	website/static/docs/en/html/search/search.js	/^function getXPos(item)$/;"	f
getYPos	website/static/docs/en/html/search/search.js	/^function getYPos(item)$/;"	f
get_centroids	src/productquantizer.cc	/^const real* ProductQuantizer::get_centroids(int32_t m, uint8_t i) const {$/;"	f	class:fasttext::ProductQuantizer
get_centroids	src/productquantizer.cc	/^real* ProductQuantizer::get_centroids(int32_t m, uint8_t i) {$/;"	f	class:fasttext::ProductQuantizer
get_dimension	python/fastText/FastText.py	/^    def get_dimension(self):$/;"	m	class:_FastText
get_input_matrix	python/fastText/FastText.py	/^    def get_input_matrix(self):$/;"	m	class:_FastText
get_input_vector	python/fastText/FastText.py	/^    def get_input_vector(self, ind):$/;"	m	class:_FastText
get_labels	python/fastText/FastText.py	/^    def get_labels(self, include_freq=False):$/;"	m	class:_FastText
get_line	python/fastText/FastText.py	/^    def get_line(self, text):$/;"	m	class:_FastText
get_output_matrix	python/fastText/FastText.py	/^    def get_output_matrix(self):$/;"	m	class:_FastText
get_path_size	python/fastText/tests/test_script.py	/^        def get_path_size(path):$/;"	f	function:gen_sup_test.sup_test
get_pybind_include	setup.py	/^class get_pybind_include(object):$/;"	c
get_random_data	python/fastText/tests/test_script.py	/^def get_random_data($/;"	f
get_random_unicode	python/fastText/tests/test_script.py	/^def get_random_unicode(length):$/;"	f
get_random_words	python/fastText/tests/test_script.py	/^def get_random_words(N, a=1, b=20, unique=True):$/;"	f
get_sentence_vector	python/fastText/FastText.py	/^    def get_sentence_vector(self, text):$/;"	m	class:_FastText
get_subword_id	python/fastText/FastText.py	/^    def get_subword_id(self, subword):$/;"	m	class:_FastText
get_subwords	python/fastText/FastText.py	/^    def get_subwords(self, word):$/;"	m	class:_FastText
get_supervised_models	python/fastText/tests/__init__.py	/^from .test_configurations import get_supervised_models$/;"	i
get_supervised_models	python/fastText/tests/test_configurations.py	/^def get_supervised_models(thread=None, verbose=1):$/;"	f
get_supervised_models	python/fastText/tests/test_script.py	/^from fastText.tests.test_configurations import get_supervised_models$/;"	i
get_word_id	python/fastText/FastText.py	/^    def get_word_id(self, word):$/;"	m	class:_FastText
get_word_vector	python/benchmarks/get_word_vector.py	/^def get_word_vector(data, model):$/;"	f
get_word_vector	python/fastText/FastText.py	/^    def get_word_vector(self, word):$/;"	m	class:_FastText
get_words	python/fastText/FastText.py	/^    def get_words(self, include_freq=False):$/;"	m	class:_FastText
getknn	alignment/align.py	/^def getknn(sc, x, y, k=10):$/;"	f
glowEffect	website/static/docs/en/html/navtree.js	/^function glowEffect(n,duration)$/;"	f
gold	eval.py	/^gold = []$/;"	v
gold	src/meter.h	/^    uint64_t gold;$/;"	m	struct:fasttext::Meter::Metrics
gotoAnchor	website/static/docs/en/html/navtree.js	/^function gotoAnchor(anchor,aname,updateLocation)$/;"	f
gotoNode	website/static/docs/en/html/navtree.js	/^function gotoNode(o,subIndex,root,hash,relpath)$/;"	f
grad_	src/model.h	/^  Vector grad_;$/;"	m	class:fasttext::Model
has_flag	setup.py	/^def has_flag(compiler, flags):$/;"	f
hash	src/dictionary.cc	/^uint32_t Dictionary::hash(const std::string& str) const {$/;"	f	class:fasttext::Dictionary
hashUrl	website/static/docs/en/html/navtree.js	/^function hashUrl()$/;"	f
hashValue	website/static/docs/en/html/navtree.js	/^function hashValue()$/;"	f
help	eval.py	/^    help='path to data'$/;"	v
help	eval.py	/^    help='path to model'$/;"	v
help	python/doc/examples/bin_to_vec.py	/^        help="Model to use",$/;"	v
help	python/doc/examples/get_vocab.py	/^        help="Model to use",$/;"	v
help	python/doc/examples/get_vocab.py	/^        help="Print labels instead of words",$/;"	v
help	runtests.py	/^        help="run integration tests",$/;"	v
help	runtests.py	/^        help="verbosity level (default 1)",$/;"	v
hidden_	src/model.h	/^  Vector hidden_;$/;"	m	class:fasttext::Model
hierarchicalSoftmax	src/model.cc	/^real Model::hierarchicalSoftmax(int32_t target, real lr) {$/;"	f	class:fasttext::Model
highlightAnchor	website/static/docs/en/html/navtree.js	/^function highlightAnchor()$/;"	f
hs	src/args.h	/^enum class loss_name : int { hs = 1, ns, softmax, ova };$/;"	m	class:fasttext::loss_name
hsz_	src/model.h	/^  int32_t hsz_;$/;"	m	class:fasttext::Model
i	python/fastText/tests/test_script.py	/^            i = random.randint(0, max_vocab_size - 1)$/;"	v
id_type	src/dictionary.h	/^typedef int32_t id_type;$/;"	t	namespace:fasttext
idx	alignment/utils.py	/^def idx(words):$/;"	f
idx_src	alignment/align.py	/^idx_src = idx(words_src)$/;"	v
idx_tgt	alignment/align.py	/^idx_tgt = idx(words_tgt)$/;"	v
indexSectionLabels.0	website/static/docs/en/html/search/searchdata.js	/^{$/;"	p
indexSectionLabels.1	website/static/docs/en/html/search/searchdata.js	/^  0: "All",$/;"	p
indexSectionLabels.2	website/static/docs/en/html/search/searchdata.js	/^  1: "Classes",$/;"	p
indexSectionLabels.3	website/static/docs/en/html/search/searchdata.js	/^  2: "Namespaces",$/;"	p
indexSectionLabels.4	website/static/docs/en/html/search/searchdata.js	/^  3: "Files",$/;"	p
indexSectionLabels.5	website/static/docs/en/html/search/searchdata.js	/^  4: "Functions",$/;"	p
indexSectionLabels.6	website/static/docs/en/html/search/searchdata.js	/^  5: "Variables",$/;"	p
indexSectionLabels.7	website/static/docs/en/html/search/searchdata.js	/^  6: "Typedefs",$/;"	p
indexSectionLabels.8	website/static/docs/en/html/search/searchdata.js	/^  7: "Enumerations",$/;"	p
indexSectionLabels.9	website/static/docs/en/html/search/searchdata.js	/^  8: "Enumerator",$/;"	p
indexSectionNames.0	website/static/docs/en/html/search/searchdata.js	/^{$/;"	p
indexSectionNames.1	website/static/docs/en/html/search/searchdata.js	/^  0: "all",$/;"	p
indexSectionNames.2	website/static/docs/en/html/search/searchdata.js	/^  1: "classes",$/;"	p
indexSectionNames.3	website/static/docs/en/html/search/searchdata.js	/^  2: "namespaces",$/;"	p
indexSectionNames.4	website/static/docs/en/html/search/searchdata.js	/^  3: "files",$/;"	p
indexSectionNames.5	website/static/docs/en/html/search/searchdata.js	/^  4: "functions",$/;"	p
indexSectionNames.6	website/static/docs/en/html/search/searchdata.js	/^  5: "variables",$/;"	p
indexSectionNames.7	website/static/docs/en/html/search/searchdata.js	/^  6: "typedefs",$/;"	p
indexSectionNames.8	website/static/docs/en/html/search/searchdata.js	/^  7: "enums",$/;"	p
indexSectionNames.9	website/static/docs/en/html/search/searchdata.js	/^  8: "enumvalues",$/;"	p
indexSectionsWithContent.0	website/static/docs/en/html/search/searchdata.js	/^{$/;"	p
indexSectionsWithContent.1	website/static/docs/en/html/search/searchdata.js	/^  0: "abcdefghiklmnopqrstuvwz~",$/;"	p
indexSectionsWithContent.2	website/static/docs/en/html/search/searchdata.js	/^  1: "adefmnpqv",$/;"	p
indexSectionsWithContent.3	website/static/docs/en/html/search/searchdata.js	/^  2: "f",$/;"	p
indexSectionsWithContent.4	website/static/docs/en/html/search/searchdata.js	/^  3: "adfmpqruv",$/;"	p
indexSectionsWithContent.5	website/static/docs/en/html/search/searchdata.js	/^  4: "abcdefghiklmnopqrstuvwz~",$/;"	p
indexSectionsWithContent.6	website/static/docs/en/html/search/searchdata.js	/^  5: "abcdeghiklmnopqrstvw",$/;"	p
indexSectionsWithContent.7	website/static/docs/en/html/search/searchdata.js	/^  6: "ir",$/;"	p
indexSectionsWithContent.8	website/static/docs/en/html/search/searchdata.js	/^  7: "elm",$/;"	p
indexSectionsWithContent.9	website/static/docs/en/html/search/searchdata.js	/^  8: "chlnsw",$/;"	p
indices	alignment/align.py	/^        indices = np.random.choice(X_src.shape[0], size=params.batchsize, replace=False)$/;"	v
init	src/dictionary.cc	/^void Dictionary::init() {$/;"	f	class:fasttext::Dictionary
initLog	src/model.cc	/^void Model::initLog() {$/;"	f	class:fasttext::Model
initMenu	website/static/docs/en/html/menu.js	/^function initMenu(relPath,searchEnabled,serverSide,searchPage,search) {$/;"	f
initMenu.makeTree	website/static/docs/en/html/menu.js	/^  function makeTree(data,relPath) {$/;"	f
initNavTree	website/static/docs/en/html/navtree.js	/^function initNavTree(toroot,relpath)$/;"	f
initNgrams	src/dictionary.cc	/^void Dictionary::initNgrams() {$/;"	f	class:fasttext::Dictionary
initResizable	website/static/docs/en/html/resize.js	/^function initResizable()$/;"	f
initResizable.collapseExpand	website/static/docs/en/html/resize.js	/^  function collapseExpand()$/;"	f
initResizable.readCookie	website/static/docs/en/html/resize.js	/^  function readCookie(cookie)$/;"	f
initResizable.resizeHeight	website/static/docs/en/html/resize.js	/^  function resizeHeight()$/;"	f
initResizable.resizeWidth	website/static/docs/en/html/resize.js	/^  function resizeWidth()$/;"	f
initResizable.restoreWidth	website/static/docs/en/html/resize.js	/^  function restoreWidth(navWidth)$/;"	f
initResizable.writeCookie	website/static/docs/en/html/resize.js	/^  function writeCookie(cookie, val, expiration)$/;"	f
initSigmoid	src/model.cc	/^void Model::initSigmoid() {$/;"	f	class:fasttext::Model
initTableDiscard	src/dictionary.cc	/^void Dictionary::initTableDiscard() {$/;"	f	class:fasttext::Dictionary
initTableNegatives	src/model.cc	/^void Model::initTableNegatives(const std::vector<int64_t>& counts) {$/;"	f	class:fasttext::Model
init_search	website/static/docs/en/html/search/search.js	/^function init_search()$/;"	f
input	src/args.h	/^  std::string input;$/;"	m	class:fasttext::Args
input_	src/fasttext.h	/^  std::shared_ptr<Matrix> input_;$/;"	m	class:fasttext::FastText
io	alignment/eval.py	/^import io$/;"	i
io	alignment/utils.py	/^import io$/;"	i
isPruned	src/dictionary.h	/^  bool isPruned() {$/;"	f	class:fasttext::entry_type::Dictionary
isQuant	src/fasttext.cc	/^bool FastText::isQuant() const {$/;"	f	class:fasttext::FastText
is_quantized	python/fastText/FastText.py	/^    def is_quantized(self):$/;"	m	class:_FastText
kAllLabelsAsTarget	src/model.h	/^  static const int32_t kAllLabelsAsTarget = -1;$/;"	m	class:fasttext::Model
kUnlimitedPredictions	src/model.h	/^  static const int32_t kUnlimitedPredictions = -1;$/;"	m	class:fasttext::Model
kmeans	src/productquantizer.cc	/^void ProductQuantizer::kmeans(const real* x, real* c, int32_t n, int32_t d) {$/;"	f	class:fasttext::ProductQuantizer
ksub_	src/productquantizer.h	/^  const int32_t ksub_ = 1 << nbits_;$/;"	m	class:fasttext::ProductQuantizer
l00001	website/static/docs/en/html/args_8h_source.html	/^<a href="args_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_ARGS_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_ARGS_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;istream&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;ostream&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno"><a class="line" href="namespacefasttext.html#a349df214746a2ea0e5d7c26326b03d6f">   19<\/a><\/span>&#160;<span class="keyword">enum class<\/span> <a class="code" href="namespacefasttext.html#a349df214746a2ea0e5d7c26326b03d6f">model_name<\/a> : int {<a class="code" href="namespacefasttext.html#a349df214746a2ea0e5d7c26326b03d6fae4709295b2cc44d67facf32b1099f1af">cbow<\/a>=1, <a class="code" href="namespacefasttext.html#a349df214746a2ea0e5d7c26326b03d6fa5dae429688af1c521ad87ac394192c6d">sg<\/a>, <a class="code" href="namespacefasttext.html#a349df214746a2ea0e5d7c26326b03d6fa2eeecd72c567401e6988624b179d0b14">sup<\/a>};<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="namespacefasttext.html#a1ba04862fd670674501ccacc936e1952">   20<\/a><\/span>&#160;<span class="keyword">enum class<\/span> <a class="code" href="namespacefasttext.html#a1ba04862fd670674501ccacc936e1952">loss_name<\/a> : int {<a class="code" href="namespacefasttext.html#a1ba04862fd670674501ccacc936e1952a789406d01073ca1782d86293dcfc0764">hs<\/a>=1, <a class="code" href="namespacefasttext.html#a1ba04862fd670674501ccacc936e1952af01a37d157918910f2035b2af81ea4e1">ns<\/a>, <a class="code" href="namespacefasttext.html#a1ba04862fd670674501ccacc936e1952ace2f1fbd249d24aabc07ac4488ab5b8c">softmax<\/a>};<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html">   22<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1Args.html">Args<\/a> {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;    <a class="code" href="classfasttext_1_1Args.html">Args<\/a>();<\/div><div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a6377f6e903dd4f991ffd477a7a4392dd">   25<\/a><\/span>&#160;    std::string <a class="code" href="classfasttext_1_1Args.html#a6377f6e903dd4f991ffd477a7a4392dd">input<\/a>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#ade3949381170993298b7541f1986d101">   26<\/a><\/span>&#160;    std::string <a class="code" href="classfasttext_1_1Args.html#ade3949381170993298b7541f1986d101">test<\/a>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a3b22b477737f538801682c85fd5b835d">   27<\/a><\/span>&#160;    std::string <a class="code" href="classfasttext_1_1Args.html#a3b22b477737f538801682c85fd5b835d">output<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#ad6f86c95de9402344106570e6a917445">   28<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classfasttext_1_1Args.html#ad6f86c95de9402344106570e6a917445">lr<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a66876acfb52e46dc166b77d7db15889d">   29<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a66876acfb52e46dc166b77d7db15889d">lrUpdateRate<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a76595eefd3fcfd980d1d4d2fa57dbaf3">   30<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a76595eefd3fcfd980d1d4d2fa57dbaf3">dim<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#ada209739bcfab2a6ac19a4deebbf901f">   31<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#ada209739bcfab2a6ac19a4deebbf901f">ws<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a7b95ffbf446a4f99636051d720ef7815">   32<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a7b95ffbf446a4f99636051d720ef7815">epoch<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#ac3ad48abd87d82df89272e19242558a5">   33<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#ac3ad48abd87d82df89272e19242558a5">minCount<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a831335fce23004ac9dcb823049d76a1b">   34<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a831335fce23004ac9dcb823049d76a1b">minCountLabel<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a9f11afb2ec9b096e465149fb59153b30">   35<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a9f11afb2ec9b096e465149fb59153b30">neg<\/a>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a1386da6e5bb230bc10f86095b7ce3beb">   36<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a1386da6e5bb230bc10f86095b7ce3beb">wordNgrams<\/a>;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a02be205f9a7c002aad68924f426b7290">   37<\/a><\/span>&#160;    <a class="code" href="namespacefasttext.html#a1ba04862fd670674501ccacc936e1952">loss_name<\/a> <a class="code" href="classfasttext_1_1Args.html#a02be205f9a7c002aad68924f426b7290">loss<\/a>;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#afaf1d8872c58e7cb90e2ae3213f15f35">   38<\/a><\/span>&#160;    <a class="code" href="namespacefasttext.html#a349df214746a2ea0e5d7c26326b03d6f">model_name<\/a> <a class="code" href="classfasttext_1_1Args.html#afaf1d8872c58e7cb90e2ae3213f15f35">model<\/a>;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a5534e863c25fa270fd0e27792723f6cb">   39<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a5534e863c25fa270fd0e27792723f6cb">bucket<\/a>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a7f2b387a9b29fa1180e143b01dd365be">   40<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a7f2b387a9b29fa1180e143b01dd365be">minn<\/a>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a32da43d82eb53a6ba11d39178e86bda9">   41<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a32da43d82eb53a6ba11d39178e86bda9">maxn<\/a>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a97d357a5d64c7826b97fb8860adf8567">   42<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a97d357a5d64c7826b97fb8860adf8567">thread<\/a>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#afd2a262e8e1bbf6d58aa4fe6ae44d7e0">   43<\/a><\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classfasttext_1_1Args.html#afd2a262e8e1bbf6d58aa4fe6ae44d7e0">t<\/a>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a1c072949833ab403ef53184dcb77b642">   44<\/a><\/span>&#160;    std::string <a class="code" href="classfasttext_1_1Args.html#a1c072949833ab403ef53184dcb77b642">label<\/a>;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a8e6e64c0bece5cce5cee420ed8f98f81">   45<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a8e6e64c0bece5cce5cee420ed8f98f81">verbose<\/a>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#aef35433948eb9201cd780276150edaf0">   46<\/a><\/span>&#160;    std::string <a class="code" href="classfasttext_1_1Args.html#aef35433948eb9201cd780276150edaf0">pretrainedVectors<\/a>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a31f3ec7d9d592e40c1c64f7469f55d72">   47<\/a><\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1Args.html#a31f3ec7d9d592e40c1c64f7469f55d72">saveOutput<\/a>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#ac689f4264b24814541bee8b5cf3abbcc">   49<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classfasttext_1_1Args.html#ac689f4264b24814541bee8b5cf3abbcc">qout<\/a>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a3bfb953b0cfe153207ad75c757af292b">   50<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classfasttext_1_1Args.html#a3bfb953b0cfe153207ad75c757af292b">retrain<\/a>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a1926c846b30e99f825a90948faba145f">   51<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classfasttext_1_1Args.html#a1926c846b30e99f825a90948faba145f">qnorm<\/a>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#aecc2b6243e3fa7c8da1b6d1205da8df0">   52<\/a><\/span>&#160;    <span class="keywordtype">size_t<\/span> <a class="code" href="classfasttext_1_1Args.html#aecc2b6243e3fa7c8da1b6d1205da8df0">cutoff<\/a>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Args.html#a7ee03404aa6c513ee8cc4b07715977c5">   53<\/a><\/span>&#160;    <span class="keywordtype">size_t<\/span> <a class="code" href="classfasttext_1_1Args.html#a7ee03404aa6c513ee8cc4b07715977c5">dsub<\/a>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;    <span class="keywordtype">void<\/span> parseArgs(<span class="keywordtype">int<\/span>, <span class="keywordtype">char<\/span>**);<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;    <span class="keywordtype">void<\/span> printHelp();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <span class="keywordtype">void<\/span> printBasicHelp();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;    <span class="keywordtype">void<\/span> printDictionaryHelp();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    <span class="keywordtype">void<\/span> printTrainingHelp();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;    <span class="keywordtype">void<\/span> printQuantizationHelp();<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;    <span class="keywordtype">void<\/span> save(std::ostream&amp;);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    <span class="keywordtype">void<\/span> load(std::istream&amp;);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;};<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;}<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1Args_html_ada209739bcfab2a6ac19a4deebbf901f"><div class="ttname"><a href="classfasttext_1_1Args.html#ada209739bcfab2a6ac19a4deebbf901f">fasttext::Args::ws<\/a><\/div><div class="ttdeci">int ws<\/div><div class="ttdef"><b>Definition:<\/b> args.h:31<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/dictionary_8h_source.html	/^<a href="dictionary_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_DICTIONARY_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_DICTIONARY_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;istream&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;ostream&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;random&gt;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="args_8h.html">args.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="real_8h.html">real.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="namespacefasttext.html#a6778f74ca8c360ba917216cb7fcbf497">   26<\/a><\/span>&#160;<span class="keyword">typedef<\/span> int32_t <a class="code" href="namespacefasttext.html#a6778f74ca8c360ba917216cb7fcbf497">id_type<\/a>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7">   27<\/a><\/span>&#160;<span class="keyword">enum class<\/span> <a class="code" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7">entry_type<\/a> : int8_t {<a class="code" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7ac47d187067c6cf953245f128b5fde62a">word<\/a>=0, <a class="code" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7ad304ba20e96d87411588eeabac850e34">label<\/a>=1};<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1entry.html">   29<\/a><\/span>&#160;<span class="keyword">struct <\/span><a class="code" href="structfasttext_1_1entry.html">entry<\/a> {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1entry.html#ae22a7e78ad207d2f90086a48a6f0d085">   30<\/a><\/span>&#160;  std::string <a class="code" href="structfasttext_1_1entry.html#ae22a7e78ad207d2f90086a48a6f0d085">word<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1entry.html#ab1f793678a1669b826d48f8b9ddcee6a">   31<\/a><\/span>&#160;  int64_t <a class="code" href="structfasttext_1_1entry.html#ab1f793678a1669b826d48f8b9ddcee6a">count<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1entry.html#a345f716349f28b9a1a13e083b1cdb92d">   32<\/a><\/span>&#160;  <a class="code" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7">entry_type<\/a> <a class="code" href="structfasttext_1_1entry.html#a345f716349f28b9a1a13e083b1cdb92d">type<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1entry.html#a0487be0781a1d71b9bb2a9c039c4be9b">   33<\/a><\/span>&#160;  std::vector&lt;int32_t&gt; <a class="code" href="structfasttext_1_1entry.html#a0487be0781a1d71b9bb2a9c039c4be9b">subwords<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;};<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html">   36<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1Dictionary.html">Dictionary<\/a> {<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#ac12687ea2998c3f9ec507d73896295c7">   38<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> int32_t MAX_VOCAB_SIZE = 30000000;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a9ec24042441fb418a4c3d10b61357933">   39<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> int32_t MAX_LINE_SIZE = 1024;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;    int32_t find(<span class="keyword">const<\/span> std::string&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;    <span class="keywordtype">void<\/span> initTableDiscard();<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;    <span class="keywordtype">void<\/span> initNgrams();<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a6deee7ff65d22fc2509702dcc48bb889">   45<\/a><\/span>&#160;    std::shared_ptr&lt;Args&gt; <a class="code" href="classfasttext_1_1Dictionary.html#a6deee7ff65d22fc2509702dcc48bb889">args_<\/a>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a3112f6337782249ffdfb4801363c5d7c">   46<\/a><\/span>&#160;    std::vector&lt;int32_t&gt; <a class="code" href="classfasttext_1_1Dictionary.html#a3112f6337782249ffdfb4801363c5d7c">word2int_<\/a>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#aa57c616c7bff0be7d9ac40b79bc7b2a7">   47<\/a><\/span>&#160;    std::vector&lt;entry&gt; <a class="code" href="classfasttext_1_1Dictionary.html#aa57c616c7bff0be7d9ac40b79bc7b2a7">words_<\/a>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a51554de7a2f0e807e931febc24bfef57">   49<\/a><\/span>&#160;    std::vector&lt;real&gt; <a class="code" href="classfasttext_1_1Dictionary.html#a51554de7a2f0e807e931febc24bfef57">pdiscard_<\/a>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a1a9a71e671291ed095b84fa5457bddb3">   50<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1Dictionary.html#a1a9a71e671291ed095b84fa5457bddb3">size_<\/a>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a534f33c9e34ed5185ea2a050d1140c62">   51<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1Dictionary.html#a534f33c9e34ed5185ea2a050d1140c62">nwords_<\/a>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a875bb508d2a202b229e97e8295721f2c">   52<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1Dictionary.html#a875bb508d2a202b229e97e8295721f2c">nlabels_<\/a>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a9b92bc5d615b81df69f035448d329108">   53<\/a><\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1Dictionary.html#a9b92bc5d615b81df69f035448d329108">ntokens_<\/a>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#aa72fbf247e76df128e3e324388963dab">   55<\/a><\/span>&#160;    int64_t pruneidx_size_ = -1;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#af0b15349507137afbb934dfb07555921">   56<\/a><\/span>&#160;    std::unordered_map&lt;int32_t, int32_t&gt; <a class="code" href="classfasttext_1_1Dictionary.html#af0b15349507137afbb934dfb07555921">pruneidx_<\/a>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <span class="keywordtype">void<\/span> addWordNgrams(<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        std::vector&lt;int32_t&gt;&amp; line,<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        <span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp; hashes,<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;        int32_t n) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;   <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#ab2661682cbe4837eb826cff941447086">   64<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> std::string <a class="code" href="classfasttext_1_1Dictionary.html#ab2661682cbe4837eb826cff941447086">EOS<\/a>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a1024c006f9f04d04653ea529f33888ec">   65<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> std::string <a class="code" href="classfasttext_1_1Dictionary.html#a1024c006f9f04d04653ea529f33888ec">BOW<\/a>;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Dictionary.html#a9330bf13a50dea1a84545a5eed943e7b">   66<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> std::string <a class="code" href="classfasttext_1_1Dictionary.html#a9330bf13a50dea1a84545a5eed943e7b">EOW<\/a>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;    <span class="keyword">explicit<\/span> <a class="code" href="classfasttext_1_1Dictionary.html">Dictionary<\/a>(std::shared_ptr&lt;Args&gt;);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;    int32_t nwords() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    int32_t nlabels() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    int64_t ntokens() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    int32_t getId(<span class="keyword">const<\/span> std::string&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    <a class="code" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7">entry_type<\/a> getType(int32_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    <a class="code" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7">entry_type<\/a> getType(<span class="keyword">const<\/span> std::string&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    <span class="keywordtype">bool<\/span> discard(int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    std::string getWord(int32_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;    <span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp; getSubwords(int32_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    <span class="keyword">const<\/span> std::vector&lt;int32_t&gt; getSubwords(<span class="keyword">const<\/span> std::string&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;    <span class="keywordtype">void<\/span> computeSubwords(<span class="keyword">const<\/span> std::string&amp;, std::vector&lt;int32_t&gt;&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;    <span class="keywordtype">void<\/span> computeSubwords(<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;        <span class="keyword">const<\/span> std::string&amp;,<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        std::vector&lt;int32_t&gt;&amp;,<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        std::vector&lt;std::string&gt;&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    <span class="keywordtype">void<\/span> getSubwords(<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        <span class="keyword">const<\/span> std::string&amp;,<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;        std::vector&lt;int32_t&gt;&amp;,<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;        std::vector&lt;std::string&gt;&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;    uint32_t hash(<span class="keyword">const<\/span> std::string&amp; str) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    <span class="keywordtype">void<\/span> add(<span class="keyword">const<\/span> std::string&amp;);<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    <span class="keywordtype">bool<\/span> readWord(std::istream&amp;, std::string&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;    <span class="keywordtype">void<\/span> readFromFile(std::istream&amp;);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;    std::string getLabel(int32_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;    <span class="keywordtype">void<\/span> save(std::ostream&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;    <span class="keywordtype">void<\/span> load(std::istream&amp;);<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;    std::vector&lt;int64_t&gt; getCounts(<a class="code" href="namespacefasttext.html#a532eedeee97e8d66a96b519d165f4eb7">entry_type<\/a>) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;    int32_t getLine(std::istream&amp;, std::vector&lt;int32_t&gt;&amp;, std::vector&lt;int32_t&gt;&amp;,<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                    std::vector&lt;int32_t&gt;&amp;, std::minstd_rand&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;    int32_t getLine(std::istream&amp;, std::vector&lt;int32_t&gt;&amp;,<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;                    std::vector&lt;int32_t&gt;&amp;, std::minstd_rand&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;    <span class="keywordtype">void<\/span> threshold(int64_t, int64_t);<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;    <span class="keywordtype">void<\/span> prune(std::vector&lt;int32_t&gt;&amp;);<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;};<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;}<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1Dictionary_html_af0b15349507137afbb934dfb07555921"><div class="ttname"><a href="classfasttext_1_1Dictionary.html#af0b15349507137afbb934dfb07555921">fasttext::Dictionary::pruneidx_<\/a><\/div><div class="ttdeci">std::unordered_map&lt; int32_t, int32_t &gt; pruneidx_<\/div><div class="ttdef"><b>Definition:<\/b> dictionary.h:56<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/fasttext_8h_source.html	/^<a href="fasttext_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_FASTTEXT_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_FASTTEXT_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno"><a class="line" href="fasttext_8h.html#a74036bd705019bb33643e90202bf343e">   13<\/a><\/span>&#160;<span class="preprocessor">#define FASTTEXT_VERSION 11 <\/span><span class="comment">\/* Version 1a *\/<\/span><span class="preprocessor"><\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno"><a class="line" href="fasttext_8h.html#af5de14588083ef853a2863c8d625ee24">   14<\/a><\/span>&#160;<span class="preprocessor">#define FASTTEXT_FILEFORMAT_MAGIC_INT32 793712314<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;time.h&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;atomic&gt;<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &lt;set&gt;<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="args_8h.html">args.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="dictionary_8h.html">dictionary.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="matrix_8h.html">matrix.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="qmatrix_8h.html">qmatrix.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="model_8h.html">model.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="real_8h.html">real.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_8h.html">utils.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="vector_8h.html">vector.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html">   33<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1FastText.html">FastText<\/a> {<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#adb5bfe8d98e11ae5dd3498f9ee4829ee">   35<\/a><\/span>&#160;    std::shared_ptr&lt;Args&gt; <a class="code" href="classfasttext_1_1FastText.html#adb5bfe8d98e11ae5dd3498f9ee4829ee">args_<\/a>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#a2f5648d532a7ff4f46ac425197082422">   36<\/a><\/span>&#160;    std::shared_ptr&lt;Dictionary&gt; <a class="code" href="classfasttext_1_1FastText.html#a2f5648d532a7ff4f46ac425197082422">dict_<\/a>;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#aa25683f12eed057c159fd11fd3a55efb">   38<\/a><\/span>&#160;    std::shared_ptr&lt;Matrix&gt; <a class="code" href="classfasttext_1_1FastText.html#aa25683f12eed057c159fd11fd3a55efb">input_<\/a>;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#a48ba03fda3c2cceef301b24b5a2c2b38">   39<\/a><\/span>&#160;    std::shared_ptr&lt;Matrix&gt; <a class="code" href="classfasttext_1_1FastText.html#a48ba03fda3c2cceef301b24b5a2c2b38">output_<\/a>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#aa4f1d5f2269feee25ae8119bc8e778c4">   41<\/a><\/span>&#160;    std::shared_ptr&lt;QMatrix&gt; <a class="code" href="classfasttext_1_1FastText.html#aa4f1d5f2269feee25ae8119bc8e778c4">qinput_<\/a>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#a62ad59060370a16588e407ce3ffebfaa">   42<\/a><\/span>&#160;    std::shared_ptr&lt;QMatrix&gt; <a class="code" href="classfasttext_1_1FastText.html#a62ad59060370a16588e407ce3ffebfaa">qoutput_<\/a>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#a4b599ce1e4fa1dedae97bd7fad225cb8">   44<\/a><\/span>&#160;    std::shared_ptr&lt;Model&gt; <a class="code" href="classfasttext_1_1FastText.html#a4b599ce1e4fa1dedae97bd7fad225cb8">model_<\/a>;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#af34de232baec78782ede73041209dd7b">   46<\/a><\/span>&#160;    std::atomic&lt;int64_t&gt; <a class="code" href="classfasttext_1_1FastText.html#af34de232baec78782ede73041209dd7b">tokenCount<\/a>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#a70fdc2b9419ebdb3a3adb582b713ecce">   47<\/a><\/span>&#160;    clock_t <a class="code" href="classfasttext_1_1FastText.html#a70fdc2b9419ebdb3a3adb582b713ecce">start<\/a>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#afe7b85dd466c4ccef45e4c590edae585">signModel<\/a>(std::ostream&amp;);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classfasttext_1_1FastText.html#a7a874ab83984dc05dca56a74edae25c1">checkModel<\/a>(std::istream&amp;);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1FastText.html#aeb75b28c20c01110cfcf807a518076c8">   51<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classfasttext_1_1FastText.html#aeb75b28c20c01110cfcf807a518076c8">quant_<\/a>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;    <a class="code" href="classfasttext_1_1FastText.html#a3f1c81aafc45ad71824b332f5cb577d5">FastText<\/a>();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#ace850e40405e56ab488d32f25e5d3533">getVector<\/a>(<a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, <span class="keyword">const<\/span> std::string&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a64fc781f7e3e60a3794562a03477398f">saveVectors<\/a>();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#adbe7666386c0d7cb9017fa641e391b9f">saveOutput<\/a>();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a3bc5bf68cf6e1f487fa57ddc750f2099">saveModel<\/a>();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#ae0e6922404294aabbb9d6322e6f464cd">loadModel<\/a>(std::istream&amp;);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#ae0e6922404294aabbb9d6322e6f464cd">loadModel<\/a>(<span class="keyword">const<\/span> std::string&amp;);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#adb757902284f53288aa41a5ae45e001f">printInfo<\/a>(<a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a3c56524cdccf6f9d23b75460bbea5d5f">supervised<\/a>(<a class="code" href="classfasttext_1_1Model.html">Model<\/a>&amp;, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>, <span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;,<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;                    <span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a592036d3a8ae545637db4864dbe5274f">cbow<\/a>(<a class="code" href="classfasttext_1_1Model.html">Model<\/a>&amp;, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>, <span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#aa1855802a2a1f2f1398fdad79f73b66a">skipgram<\/a>(<a class="code" href="classfasttext_1_1Model.html">Model<\/a>&amp;, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>, <span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;    std::vector&lt;int32_t&gt; <a class="code" href="classfasttext_1_1FastText.html#a06fbfe68049942cab56eb85ebb2ca4d9">selectEmbeddings<\/a>(int32_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#aa01f053de2afa22056c594d96988c1ad">quantize<\/a>(std::shared_ptr&lt;Args&gt;);<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#af13c347cb7dde5fea3b0122f029a0b5b">test<\/a>(std::istream&amp;, int32_t);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a831dff689fbc2af4f93c91ee1bde7e95">predict<\/a>(std::istream&amp;, int32_t, <span class="keywordtype">bool<\/span>);<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a831dff689fbc2af4f93c91ee1bde7e95">predict<\/a>(<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;        std::istream&amp;,<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        int32_t,<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        std::vector&lt;std::pair&lt;real, std::string&gt;&gt;&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a1a5d918e595e00a8ea7b9bc5ac8f6c35">wordVectors<\/a>();<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a39efb50f61237890cbf2e30b7a516618">sentenceVectors<\/a>();<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a62a84e26a04b64eb35edfa110dd8dc32">ngramVectors<\/a>(std::string);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#aadb72a552ff01b6d6efe9b161ad8dd49">textVectors<\/a>();<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a74e01ba3737bd625bf0602fb808b1501">printWordVectors<\/a>();<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#af4d659c58cd72b67f5cc0cce2c1925cf">printSentenceVectors<\/a>();<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#ace82dc820d98f504af16b8b8c501a6f4">precomputeWordVectors<\/a>(<a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a5c8825c522415d89478a54ecf28642c9">findNN<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;, <span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, int32_t,<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;                <span class="keyword">const<\/span> std::set&lt;std::string&gt;&amp;);<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a5509f491ca6c2fa3e57bc3443536f885">nn<\/a>(int32_t);<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a34e7fade7f758870ffcd28015555ba74">analogies<\/a>(int32_t);<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a1b6d83563616330a64d6db4921e835f1">trainThread<\/a>(int32_t);<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a7430c17374a28e7f1fd50a9c86ac659b">train<\/a>(std::shared_ptr&lt;Args&gt;);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1FastText.html#a9e503be304e98ead00a2eaed3127f64a">loadVectors<\/a>(std::string);<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;    <span class="keywordtype">int<\/span> <a class="code" href="classfasttext_1_1FastText.html#a32a93e0bc4389be11aa4be0990a9e010">getDimension<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;};<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;}<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1FastText_html_aadb72a552ff01b6d6efe9b161ad8dd49"><div class="ttname"><a href="classfasttext_1_1FastText.html#aadb72a552ff01b6d6efe9b161ad8dd49">fasttext::FastText::textVectors<\/a><\/div><div class="ttdeci">void textVectors()<\/div><div class="ttdef"><b>Definition:<\/b> fasttext.cc:402<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/matrix_8h_source.html	/^<a href="matrix_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_MATRIX_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_MATRIX_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;istream&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;ostream&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="real_8h.html">real.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="keyword">class <\/span>Vector;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Matrix.html">   23<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a> {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Matrix.html#a3a63d6e3e3db63e5f756bbc4692a46ae">   26<\/a><\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>* <a class="code" href="classfasttext_1_1Matrix.html#a3a63d6e3e3db63e5f756bbc4692a46ae">data_<\/a>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Matrix.html#adbdd245dfc806fbbbef33a07e4805084">   27<\/a><\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1Matrix.html#adbdd245dfc806fbbbef33a07e4805084">m_<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Matrix.html#aeeddaea318709ea37127caae30194ff3">   28<\/a><\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1Matrix.html#aeeddaea318709ea37127caae30194ff3">n_<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;    <a class="code" href="classfasttext_1_1Matrix.html#ae3eed8f78b046582d6504eaae17b9890">Matrix<\/a>();<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    <a class="code" href="classfasttext_1_1Matrix.html#ae3eed8f78b046582d6504eaae17b9890">Matrix<\/a>(int64_t, int64_t);<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    <a class="code" href="classfasttext_1_1Matrix.html#ae3eed8f78b046582d6504eaae17b9890">Matrix<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp; <a class="code" href="classfasttext_1_1Matrix.html#abe27a5e1c276ab145297c4941cd468f3">operator=<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    <a class="code" href="classfasttext_1_1Matrix.html#ad4442ecc4c59f34e8d83b0ce87472417">~Matrix<\/a>();<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Matrix.html#afc9c477f90e9d9a193e1710e46a68221">   36<\/a><\/span>&#160;    <span class="keyword">inline<\/span> <span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>&amp; <a class="code" href="classfasttext_1_1Matrix.html#afc9c477f90e9d9a193e1710e46a68221">at<\/a>(int64_t i, int64_t j)<span class="keyword"> const <\/span>{<span class="keywordflow">return<\/span> data_[i * n_ + j];};<\/div><div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Matrix.html#abb6222f956da7e32391092158eaaf5a0">   37<\/a><\/span>&#160;    <span class="keyword">inline<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>&amp; <a class="code" href="classfasttext_1_1Matrix.html#abb6222f956da7e32391092158eaaf5a0">at<\/a>(int64_t i, int64_t j) {<span class="keywordflow">return<\/span> data_[i * n_ + j];};<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#a44eee2d614a0cce8396cd33ecb7439ba">zero<\/a>();<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#aef334e5d5a164b01c2b74960ffa3782d">uniform<\/a>(<a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1Matrix.html#ae6b962ed2ca31fb3a8d094c8f85d6136">dotRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, int64_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#aceef1bc55d67b38c8b2b2c9ba7e769de">addRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, int64_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#a103b48301d251f8af69409c123435b3c">multiplyRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp; nums, int64_t ib = 0, int64_t ie = -1);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#ab4d6dd58db43dd2c4a6fbb12c74541a0">divideRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp; denoms, int64_t ib = 0, int64_t ie = -1);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1Matrix.html#aa61bc6b1a1b2467d7fb41a9e99d96922">l2NormRow<\/a>(int64_t i) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#aa61bc6b1a1b2467d7fb41a9e99d96922">l2NormRow<\/a>(<a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp; norms) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#aaf869b3115a6b404c13f5c31678c147b">save<\/a>(std::ostream&amp;);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Matrix.html#a8a04afebc25fcf38376f272371e0b60d">load<\/a>(std::istream&amp;);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;};<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;}<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1Matrix_html_ae6b962ed2ca31fb3a8d094c8f85d6136"><div class="ttname"><a href="classfasttext_1_1Matrix.html#ae6b962ed2ca31fb3a8d094c8f85d6136">fasttext::Matrix::dotRow<\/a><\/div><div class="ttdeci">real dotRow(const Vector &amp;, int64_t) const<\/div><div class="ttdef"><b>Definition:<\/b> matrix.cc:68<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/model_8h_source.html	/^<a href="model_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_MODEL_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_MODEL_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;random&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;utility&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="args_8h.html">args.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="matrix_8h.html">matrix.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="vector_8h.html">vector.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="qmatrix_8h.html">qmatrix.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="real_8h.html">real.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="model_8h.html#a2e8aaf1ce5284c2017df4d6a3b631532">   24<\/a><\/span>&#160;<span class="preprocessor">#define SIGMOID_TABLE_SIZE 512<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="model_8h.html#a526b042c8c04cdd0f0f5c9e097d5ca34">   25<\/a><\/span>&#160;<span class="preprocessor">#define MAX_SIGMOID 8<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="model_8h.html#a39f445c336c3e871eccbaa0423b6daef">   26<\/a><\/span>&#160;<span class="preprocessor">#define LOG_TABLE_SIZE 512<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1Node.html">   30<\/a><\/span>&#160;<span class="keyword">struct <\/span><a class="code" href="structfasttext_1_1Node.html">Node<\/a> {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1Node.html#a57d838e16a5dbb34aa0548a20843cf09">   31<\/a><\/span>&#160;  int32_t <a class="code" href="structfasttext_1_1Node.html#a57d838e16a5dbb34aa0548a20843cf09">parent<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1Node.html#a44f47a277a7fc982be30569befc7d8c1">   32<\/a><\/span>&#160;  int32_t <a class="code" href="structfasttext_1_1Node.html#a44f47a277a7fc982be30569befc7d8c1">left<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1Node.html#a8a02d78386d6837a20858269bf9c6366">   33<\/a><\/span>&#160;  int32_t <a class="code" href="structfasttext_1_1Node.html#a8a02d78386d6837a20858269bf9c6366">right<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1Node.html#a76430b0ffbb3b8f217435b11e4f51118">   34<\/a><\/span>&#160;  int64_t <a class="code" href="structfasttext_1_1Node.html#a76430b0ffbb3b8f217435b11e4f51118">count<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="structfasttext_1_1Node.html#a567bed8e85aa54f73371420f1b42dcda">   35<\/a><\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="structfasttext_1_1Node.html#a567bed8e85aa54f73371420f1b42dcda">binary<\/a>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;};<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html">   38<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1Model.html">Model<\/a> {<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#ae7c72e4f6b9fda134708d08efb0170e2">   40<\/a><\/span>&#160;    std::shared_ptr&lt;Matrix&gt; <a class="code" href="classfasttext_1_1Model.html#ae7c72e4f6b9fda134708d08efb0170e2">wi_<\/a>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#ad6b3771605106e55bb132be316ec34b9">   41<\/a><\/span>&#160;    std::shared_ptr&lt;Matrix&gt; <a class="code" href="classfasttext_1_1Model.html#ad6b3771605106e55bb132be316ec34b9">wo_<\/a>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#ac9524ea5200abefdd2d83e29ffaa9693">   42<\/a><\/span>&#160;    std::shared_ptr&lt;QMatrix&gt; <a class="code" href="classfasttext_1_1Model.html#ac9524ea5200abefdd2d83e29ffaa9693">qwi_<\/a>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a4ee087454e830b18c22a59ae9bb6fcf1">   43<\/a><\/span>&#160;    std::shared_ptr&lt;QMatrix&gt; <a class="code" href="classfasttext_1_1Model.html#a4ee087454e830b18c22a59ae9bb6fcf1">qwo_<\/a>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a76314e94e2582e9e2160bcfd9c75ba99">   44<\/a><\/span>&#160;    std::shared_ptr&lt;Args&gt; <a class="code" href="classfasttext_1_1Model.html#a76314e94e2582e9e2160bcfd9c75ba99">args_<\/a>;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a31e9eee86f238bd2962569be67444e79">   45<\/a><\/span>&#160;    <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a> <a class="code" href="classfasttext_1_1Model.html#a31e9eee86f238bd2962569be67444e79">hidden_<\/a>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a845160e4cdb0e8c17b74f269563dc71c">   46<\/a><\/span>&#160;    <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a> <a class="code" href="classfasttext_1_1Model.html#a845160e4cdb0e8c17b74f269563dc71c">output_<\/a>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a79bd4bcbd2e6f10c5483249dfea74e97">   47<\/a><\/span>&#160;    <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a> <a class="code" href="classfasttext_1_1Model.html#a79bd4bcbd2e6f10c5483249dfea74e97">grad_<\/a>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a0b7f9ccdcdb6e44c0515b46af829bc19">   48<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1Model.html#a0b7f9ccdcdb6e44c0515b46af829bc19">hsz_<\/a>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a39799429dd196a7ec7e4bdee63087751">   49<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1Model.html#a39799429dd196a7ec7e4bdee63087751">osz_<\/a>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a3cc48ada470c99ef69840cf79967616e">   50<\/a><\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1Model.html#a3cc48ada470c99ef69840cf79967616e">loss_<\/a>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#aeec9f08e7775bfcab322960fc80d7621">   51<\/a><\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1Model.html#aeec9f08e7775bfcab322960fc80d7621">nexamples_<\/a>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a8df9424c08479931b6351844be3bd090">   52<\/a><\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>* <a class="code" href="classfasttext_1_1Model.html#a8df9424c08479931b6351844be3bd090">t_sigmoid<\/a>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a790013d8e68ed70db7074c9d3e262170">   53<\/a><\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>* <a class="code" href="classfasttext_1_1Model.html#a790013d8e68ed70db7074c9d3e262170">t_log<\/a>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;    <span class="comment">\/\/ used for negative sampling:<\/span><\/div><div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a082187d7f01c243f296084878ea0e0f1">   55<\/a><\/span>&#160;    std::vector&lt;int32_t&gt; <a class="code" href="classfasttext_1_1Model.html#a082187d7f01c243f296084878ea0e0f1">negatives<\/a>;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#afaf1104f9e1c382c3eb30ca41311e84f">   56<\/a><\/span>&#160;    <span class="keywordtype">size_t<\/span> <a class="code" href="classfasttext_1_1Model.html#afaf1104f9e1c382c3eb30ca41311e84f">negpos<\/a>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <span class="comment">\/\/ used for hierarchical softmax:<\/span><\/div><div class="line"><a name="l00058"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a0ff68cfe9333feff1f8914f3787b1b5f">   58<\/a><\/span>&#160;    std::vector&lt; std::vector&lt;int32_t&gt; &gt; <a class="code" href="classfasttext_1_1Model.html#a0ff68cfe9333feff1f8914f3787b1b5f">paths<\/a>;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#ab6675d265df22787dfa9835196300d3b">   59<\/a><\/span>&#160;    std::vector&lt; std::vector&lt;bool&gt; &gt; <a class="code" href="classfasttext_1_1Model.html#ab6675d265df22787dfa9835196300d3b">codes<\/a>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a53a03f49121369e4100ceb6ab06f178a">   60<\/a><\/span>&#160;    std::vector&lt;Node&gt; <a class="code" href="classfasttext_1_1Model.html#a53a03f49121369e4100ceb6ab06f178a">tree<\/a>;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> comparePairs(<span class="keyword">const<\/span> std::pair&lt;real, int32_t&gt;&amp;,<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;                             <span class="keyword">const<\/span> std::pair&lt;real, int32_t&gt;&amp;);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;    int32_t getNegative(int32_t target);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;    <span class="keywordtype">void<\/span> initSigmoid();<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;    <span class="keywordtype">void<\/span> initLog();<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#ab8e5d608cd0338d1dc2e2b2eeaed751c">   69<\/a><\/span>&#160;    <span class="keyword">static<\/span> <span class="keyword">const<\/span> int32_t NEGATIVE_TABLE_SIZE = 10000000;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    <a class="code" href="classfasttext_1_1Model.html">Model<\/a>(std::shared_ptr&lt;Matrix&gt;, std::shared_ptr&lt;Matrix&gt;,<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;          std::shared_ptr&lt;Args&gt;, int32_t);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    ~<a class="code" href="classfasttext_1_1Model.html">Model<\/a>();<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> binaryLogistic(int32_t, <span class="keywordtype">bool<\/span>, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> negativeSampling(int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> hierarchicalSoftmax(int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="namespacefasttext.html#a1ba04862fd670674501ccacc936e1952ace2f1fbd249d24aabc07ac4488ab5b8c">softmax<\/a>(int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="main_8cc.html#a4479606e315746032f4ecde4b62ebc26">predict<\/a>(<span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;, int32_t,<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;                 std::vector&lt;std::pair&lt;real, int32_t&gt;&gt;&amp;,<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;                 <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="main_8cc.html#a4479606e315746032f4ecde4b62ebc26">predict<\/a>(<span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;, int32_t,<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                 std::vector&lt;std::pair&lt;real, int32_t&gt;&gt;&amp;);<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;    <span class="keywordtype">void<\/span> dfs(int32_t, int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>,<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;             std::vector&lt;std::pair&lt;real, int32_t&gt;&gt;&amp;,<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;             <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    <span class="keywordtype">void<\/span> findKBest(int32_t, std::vector&lt;std::pair&lt;real, int32_t&gt;&gt;&amp;,<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                   <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;    <span class="keywordtype">void<\/span> update(<span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;, int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;    <span class="keywordtype">void<\/span> computeHidden(<span class="keyword">const<\/span> std::vector&lt;int32_t&gt;&amp;, <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;    <span class="keywordtype">void<\/span> computeOutputSoftmax(<a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;    <span class="keywordtype">void<\/span> computeOutputSoftmax();<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;    <span class="keywordtype">void<\/span> setTargetCounts(<span class="keyword">const<\/span> std::vector&lt;int64_t&gt;&amp;);<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;    <span class="keywordtype">void<\/span> initTableNegatives(<span class="keyword">const<\/span> std::vector&lt;int64_t&gt;&amp;);<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;    <span class="keywordtype">void<\/span> buildTree(<span class="keyword">const<\/span> std::vector&lt;int64_t&gt;&amp;);<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> getLoss() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> sigmoid(<a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> log(<a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a7e27d2fd2800dcee09ea8101fea49676">  103<\/a><\/span>&#160;    std::minstd_rand <a class="code" href="classfasttext_1_1Model.html#a7e27d2fd2800dcee09ea8101fea49676">rng<\/a>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Model.html#a0d3b51a1c171314b879aae52c3717a43">  104<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classfasttext_1_1Model.html#a0d3b51a1c171314b879aae52c3717a43">quant_<\/a>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;    <span class="keywordtype">void<\/span> setQuantizePointer(std::shared_ptr&lt;QMatrix&gt;, std::shared_ptr&lt;QMatrix&gt;, <span class="keywordtype">bool<\/span>);<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;};<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;}<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1Model_html_a8df9424c08479931b6351844be3bd090"><div class="ttname"><a href="classfasttext_1_1Model.html#a8df9424c08479931b6351844be3bd090">fasttext::Model::t_sigmoid<\/a><\/div><div class="ttdeci">real * t_sigmoid<\/div><div class="ttdef"><b>Definition:<\/b> model.h:52<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/productquantizer_8h_source.html	/^<a href="productquantizer_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_PRODUCT_QUANTIZER_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_PRODUCT_QUANTIZER_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;cstring&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;istream&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;ostream&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;random&gt;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="real_8h.html">real.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="vector_8h.html">vector.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html">   24<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1ProductQuantizer.html">ProductQuantizer<\/a> {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#ac44db00342a54cb05df9d0c136a8633c">   26<\/a><\/span>&#160;    <span class="keyword">const<\/span> int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#ac44db00342a54cb05df9d0c136a8633c">nbits_<\/a> = 8;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#afa68c0f82fab09a93c2024a4dceecdf7">   27<\/a><\/span>&#160;    <span class="keyword">const<\/span> int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#afa68c0f82fab09a93c2024a4dceecdf7">ksub_<\/a> = 1 &lt;&lt; <a class="code" href="classfasttext_1_1ProductQuantizer.html#ac44db00342a54cb05df9d0c136a8633c">nbits_<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#ad439c3fefe554fa05f2b1d06ddcd77b6">   28<\/a><\/span>&#160;    <span class="keyword">const<\/span> int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#ad439c3fefe554fa05f2b1d06ddcd77b6">max_points_per_cluster_<\/a> = 256;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#a38780ae9c1997722683bb43d55ece633">   29<\/a><\/span>&#160;    <span class="keyword">const<\/span> int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#a38780ae9c1997722683bb43d55ece633">max_points_<\/a> = max_points_per_cluster_ * <a class="code" href="classfasttext_1_1ProductQuantizer.html#afa68c0f82fab09a93c2024a4dceecdf7">ksub_<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#ae71f8417a9265bdee493edfa6139d757">   30<\/a><\/span>&#160;    <span class="keyword">const<\/span> int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#ae71f8417a9265bdee493edfa6139d757">seed_<\/a> = 1234;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#afa968d226983fbebfd2bb9d80bf6571f">   31<\/a><\/span>&#160;    <span class="keyword">const<\/span> int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#afa968d226983fbebfd2bb9d80bf6571f">niter_<\/a> = 25;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#a2334f23eb94911fa4b528a584eb7f7e4">   32<\/a><\/span>&#160;    <span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a2334f23eb94911fa4b528a584eb7f7e4">eps_<\/a> = 1e-7;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#afdeec3948e983b1f3e1e36292153e300">   34<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#afdeec3948e983b1f3e1e36292153e300">dim_<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#a1e09b5c96869b0b4758348b976152309">   35<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#a1e09b5c96869b0b4758348b976152309">nsubq_<\/a>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#a9221f241be27487c671bbbba7a84b389">   36<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#a9221f241be27487c671bbbba7a84b389">dsub_<\/a>;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#ae79be52ccbb6230ce129234e150bc826">   37<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1ProductQuantizer.html#ae79be52ccbb6230ce129234e150bc826">lastdsub_<\/a>;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#a56ed1ae67f47e95f2d1f4c6146d4913a">   39<\/a><\/span>&#160;    std::vector&lt;real&gt; <a class="code" href="classfasttext_1_1ProductQuantizer.html#a56ed1ae67f47e95f2d1f4c6146d4913a">centroids_<\/a>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#af5755b1c5ed3128430f1c1de2c03ac26">   41<\/a><\/span>&#160;    std::minstd_rand <a class="code" href="classfasttext_1_1ProductQuantizer.html#af5755b1c5ed3128430f1c1de2c03ac26">rng<\/a>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1ProductQuantizer.html#a08b62937f9073fb4d95f161da7121850">   44<\/a><\/span>&#160;    <a class="code" href="classfasttext_1_1ProductQuantizer.html#a08b62937f9073fb4d95f161da7121850">ProductQuantizer<\/a>() {}<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    <a class="code" href="classfasttext_1_1ProductQuantizer.html#a08b62937f9073fb4d95f161da7121850">ProductQuantizer<\/a>(int32_t, int32_t);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>* <a class="code" href="classfasttext_1_1ProductQuantizer.html#adb6a2ade7e4a77d7b59f03c081d11d91">get_centroids<\/a> (int32_t, uint8_t);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>* <a class="code" href="classfasttext_1_1ProductQuantizer.html#adb6a2ade7e4a77d7b59f03c081d11d91">get_centroids<\/a>(int32_t, uint8_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1ProductQuantizer.html#aa957e4e92eb6111152f6e34b0b4a27cd">assign_centroid<\/a>(<span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, <span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, uint8_t*, int32_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#aeba73a087e59f504472063db0a217e84">Estep<\/a>(<span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, <span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, uint8_t*, int32_t, int32_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a5f6cc5e957f5546523aea7dd9e826f25">MStep<\/a>(<span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, <span class="keyword">const<\/span> uint8_t*, int32_t, int32_t);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a06c91357dc88225714daa10548525352">kmeans<\/a>(<span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, int32_t, int32_t);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a40e3090d1f7e525c3e9787d9856d3b7d">train<\/a>(<span class="keywordtype">int<\/span>, <span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a82e0fb5da37c5c6a62d6f9f6d34d91d6">mulcode<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, <span class="keyword">const<\/span> uint8_t*, int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#ac0039e0eccfc7dc15ddb3be3bac0fec3">addcode<\/a>(<a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, <span class="keyword">const<\/span> uint8_t*, int32_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a1b6fedf0a199ed0ec1afc2aea26a4b37">compute_code<\/a>(<span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, uint8_t*)  <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#aca0eb5cd10d5bba60b4f3f37f87676f6">compute_codes<\/a>(<span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>*, uint8_t*, int32_t)  <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a6e4d58883fb38225c6f4731770b89274">save<\/a>(std::ostream&amp;);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1ProductQuantizer.html#a4060617809c0099a9e5ca73ec0497056">load<\/a>(std::istream&amp;);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;};<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;}<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1ProductQuantizer_html_a82e0fb5da37c5c6a62d6f9f6d34d91d6"><div class="ttname"><a href="classfasttext_1_1ProductQuantizer.html#a82e0fb5da37c5c6a62d6f9f6d34d91d6">fasttext::ProductQuantizer::mulcode<\/a><\/div><div class="ttdeci">real mulcode(const Vector &amp;, const uint8_t *, int32_t, real) const<\/div><div class="ttdef"><b>Definition:<\/b> productquantizer.cc:149<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/qmatrix_8h_source.html	/^<a href="qmatrix_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_QMATRIX_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_QMATRIX_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;istream&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;ostream&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="real_8h.html">real.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="matrix_8h.html">matrix.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="vector_8h.html">vector.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="productquantizer_8h.html">productquantizer.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html">   29<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1QMatrix.html">QMatrix<\/a> {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;  <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#a6c62644a138ed88863088dcdeb32dbd7">   31<\/a><\/span>&#160;    std::unique_ptr&lt;ProductQuantizer&gt; <a class="code" href="classfasttext_1_1QMatrix.html#a6c62644a138ed88863088dcdeb32dbd7">pq_<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#a8203216a4cb2b721697f7dc2b509f25a">   32<\/a><\/span>&#160;    std::unique_ptr&lt;ProductQuantizer&gt; <a class="code" href="classfasttext_1_1QMatrix.html#a8203216a4cb2b721697f7dc2b509f25a">npq_<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#acc957d3d66b58cb9381f6a0556096c93">   34<\/a><\/span>&#160;    uint8_t* <a class="code" href="classfasttext_1_1QMatrix.html#acc957d3d66b58cb9381f6a0556096c93">codes_<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#a17f22153d042c64052a3468faec70fce">   35<\/a><\/span>&#160;    uint8_t* <a class="code" href="classfasttext_1_1QMatrix.html#a17f22153d042c64052a3468faec70fce">norm_codes_<\/a>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#aadc6e4d399442555f3c2993b97285143">   37<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classfasttext_1_1QMatrix.html#aadc6e4d399442555f3c2993b97285143">qnorm_<\/a>;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#ad2457490bb9a531740187fffb63cace2">   39<\/a><\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1QMatrix.html#ad2457490bb9a531740187fffb63cace2">m_<\/a>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#a54082c819b9939e2d49fc0733a609cea">   40<\/a><\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1QMatrix.html#a54082c819b9939e2d49fc0733a609cea">n_<\/a>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1QMatrix.html#a4a69f60ba96c0b1a9da22c3951eca759">   42<\/a><\/span>&#160;    int32_t <a class="code" href="classfasttext_1_1QMatrix.html#a4a69f60ba96c0b1a9da22c3951eca759">codesize_<\/a>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    <a class="code" href="classfasttext_1_1QMatrix.html#a976442aaed5b1afee2f2cd4473c0d62b">QMatrix<\/a>();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    <a class="code" href="classfasttext_1_1QMatrix.html#a976442aaed5b1afee2f2cd4473c0d62b">QMatrix<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;, int32_t, <span class="keywordtype">bool<\/span>);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <a class="code" href="classfasttext_1_1QMatrix.html#a7de6d212bec1c4028ee30e968b5d030d">~QMatrix<\/a>();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1QMatrix.html#a16350455c02cf5f00175b1b0c6a310cd">getM<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1QMatrix.html#ad969042dfc46a64e386f12616a4d6bcb">getN<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1QMatrix.html#a0e4d84be1c6cd0cbfc4568f905961017">quantizeNorm<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1QMatrix.html#ab9ae1914dc1b72e305880a8c22626afc">quantize<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1QMatrix.html#ad8f153a45f69530aeef171bebbce93fc">addToVector<\/a>(<a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp; x, int32_t t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1QMatrix.html#ad1671bceb60d87492b662331cc084c56">dotRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, int64_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1QMatrix.html#a00267b43ee5eefc92948c654fb9fc9f1">save<\/a>(std::ostream&amp;);<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1QMatrix.html#a03c039b81b5aaed30d95149de9379998">load<\/a>(std::istream&amp;);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;};<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;}<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1QMatrix_html_a4a69f60ba96c0b1a9da22c3951eca759"><div class="ttname"><a href="classfasttext_1_1QMatrix.html#a4a69f60ba96c0b1a9da22c3951eca759">fasttext::QMatrix::codesize_<\/a><\/div><div class="ttdeci">int32_t codesize_<\/div><div class="ttdef"><b>Definition:<\/b> qmatrix.h:42<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/real_8h_source.html	/^<a href="real_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_REAL_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_REAL_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno"><a class="line" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">   15<\/a><\/span>&#160;<span class="keyword">typedef<\/span> <span class="keywordtype">float<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;}<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacefasttext_html"><div class="ttname"><a href="namespacefasttext.html">fasttext<\/a><\/div><div class="ttdef"><b>Definition:<\/b> args.cc:17<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/utils_8h_source.html	/^<a href="utils_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_UTILS_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_UTILS_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;fstream&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span>utils {<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;  int64_t <a class="code" href="namespacefasttext_1_1utils.html#a2d7a0a4c572dbfa5458ca782355c35aa">size<\/a>(std::ifstream&amp;);<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="namespacefasttext_1_1utils.html#a9d7d5c4b31752c7fe0bf71970203f82d">seek<\/a>(std::ifstream&amp;, int64_t);<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;}<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;}<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacefasttext_html"><div class="ttname"><a href="namespacefasttext.html">fasttext<\/a><\/div><div class="ttdef"><b>Definition:<\/b> args.cc:17<\/div><\/div>$/;"	a
l00001	website/static/docs/en/html/vector_8h_source.html	/^<a href="vector_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef FASTTEXT_VECTOR_H<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define FASTTEXT_VECTOR_H<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;ostream&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="real_8h.html">real.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacefasttext.html">fasttext<\/a> {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keyword">class <\/span>Matrix;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="keyword">class <\/span>QMatrix;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Vector.html">   23<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="classfasttext_1_1Vector.html">Vector<\/a> {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Vector.html#a97bc75d46013e08d43881e1ee3725491">   26<\/a><\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1Vector.html#a97bc75d46013e08d43881e1ee3725491">m_<\/a>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classfasttext_1_1Vector.html#ab177f24ed7071636dcd17e90a746dd2e">   27<\/a><\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>* <a class="code" href="classfasttext_1_1Vector.html#ab177f24ed7071636dcd17e90a746dd2e">data_<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    <span class="keyword">explicit<\/span> <a class="code" href="classfasttext_1_1Vector.html#ab7f9177915b3d3837213abb15de9b939">Vector<\/a>(int64_t);<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;    <a class="code" href="classfasttext_1_1Vector.html#aedde9ca3a3952dfd54addd21f8a63506">~Vector<\/a>();<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>&amp; <a class="code" href="classfasttext_1_1Vector.html#ad60a80620d695fc64062b9b493bc6232">operator[]<\/a>(int64_t);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <span class="keyword">const<\/span> <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>&amp; <a class="code" href="classfasttext_1_1Vector.html#ad60a80620d695fc64062b9b493bc6232">operator[]<\/a>(int64_t) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1Vector.html#af3e8aa155da430d0911896d53db6789d">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#af0cd17b1bbdf212780c31e427e982793">zero<\/a>();<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#af14f0011942b0a98562ca2f677aa4395">mul<\/a>(<a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;    <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a> <a class="code" href="classfasttext_1_1Vector.html#aa88e78466e3db802c403f6fe13421ff6">norm<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#aef57a1c3a853b8691f544e9f881a3394">addVector<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp; source);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#aef57a1c3a853b8691f544e9f881a3394">addVector<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#a94d369014b965b42ead2deb5e3fa0b11">addRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;, int64_t);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#a94d369014b965b42ead2deb5e3fa0b11">addRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1QMatrix.html">QMatrix<\/a>&amp;, int64_t);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#a94d369014b965b42ead2deb5e3fa0b11">addRow<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;, int64_t, <a class="code" href="namespacefasttext.html#a7afdad102f318271c14154b8e65e5ea3">real<\/a>);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#af14f0011942b0a98562ca2f677aa4395">mul<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1QMatrix.html">QMatrix<\/a>&amp;, <span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    <span class="keywordtype">void<\/span> <a class="code" href="classfasttext_1_1Vector.html#af14f0011942b0a98562ca2f677aa4395">mul<\/a>(<span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Matrix.html">Matrix<\/a>&amp;, <span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    int64_t <a class="code" href="classfasttext_1_1Vector.html#a5ca06ee0880c24409faad3e69a920d9a">argmax<\/a>();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;};<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;std::ostream&amp; <a class="code" href="namespacefasttext.html#a23eb4596f3beb9859b22cf64a83461d6">operator&lt;&lt;<\/a>(std::ostream&amp;, <span class="keyword">const<\/span> <a class="code" href="classfasttext_1_1Vector.html">Vector<\/a>&amp;);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;}<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classfasttext_1_1Vector_html_af0cd17b1bbdf212780c31e427e982793"><div class="ttname"><a href="classfasttext_1_1Vector.html#af0cd17b1bbdf212780c31e427e982793">fasttext::Vector::zero<\/a><\/div><div class="ttdeci">void zero()<\/div><div class="ttdef"><b>Definition:<\/b> vector.cc:35<\/div><\/div>$/;"	a
l2NormRow	src/matrix.cc	/^real Matrix::l2NormRow(int64_t i) const {$/;"	f	class:fasttext::Matrix
l2NormRow	src/matrix.cc	/^void Matrix::l2NormRow(Vector& norms) const {$/;"	f	class:fasttext::Matrix
label	src/args.h	/^  std::string label;$/;"	m	class:fasttext::Args
label	src/dictionary.h	/^enum class entry_type : int8_t { word = 0, label = 1 };$/;"	m	class:fasttext::entry_type
labelMetrics_	src/meter.h	/^  std::unordered_map<int32_t, Metrics> labelMetrics_;$/;"	m	class:fasttext::Meter
langid_job1	python/fastText/tests/test_configurations.py	/^def langid_job1(thread=None):$/;"	f
langid_job2	python/fastText/tests/test_configurations.py	/^def langid_job2(thread=None):$/;"	f
lastdsub_	src/productquantizer.h	/^  int32_t lastdsub_;$/;"	m	class:fasttext::ProductQuantizer
lazyComputeWordVectors	src/fasttext.cc	/^void FastText::lazyComputeWordVectors() {$/;"	f	class:fasttext::FastText
left	src/model.h	/^  int32_t left;$/;"	m	struct:fasttext::Node
letter_a	website/static/docs/en/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_a"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;a&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_d	website/static/docs/en/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_d"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;d&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_e	website/static/docs/en/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_e"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;e&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_f	website/static/docs/en/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_f"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;f&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_m	website/static/docs/en/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_m"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;m&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_n	website/static/docs/en/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_n"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;n&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_p	website/static/docs/en/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_p"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;p&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_q	website/static/docs/en/html/classes.html	/^<\/td><td valign="top"><a class="el" href="classfasttext_1_1Model.html">Model<\/a> (<a class="el" href="namespacefasttext.html">fasttext<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_q"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;q&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_v	website/static/docs/en/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_v"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;v&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
line	embs/map.py	/^            line = line.strip()$/;"	v
line	python/fastText/tests/test_script.py	/^        line = " ".join(line)$/;"	v
line	python/fastText/tests/test_script.py	/^        line = []$/;"	v
line_length	python/fastText/tests/test_script.py	/^        line_length = random.randint(min_words_line, max_words_line)$/;"	v
lines	python/fastText/tests/test_script.py	/^    lines = []$/;"	v
load	src/args.cc	/^void Args::load(std::istream& in) {$/;"	f	class:fasttext::Args
load	src/dictionary.cc	/^void Dictionary::load(std::istream& in) {$/;"	f	class:fasttext::Dictionary
load	src/matrix.cc	/^void Matrix::load(std::istream& in) {$/;"	f	class:fasttext::Matrix
load	src/productquantizer.cc	/^void ProductQuantizer::load(std::istream& in) {$/;"	f	class:fasttext::ProductQuantizer
load	src/qmatrix.cc	/^void QMatrix::load(std::istream& in) {$/;"	f	class:fasttext::QMatrix
loadModel	src/fasttext.cc	/^void FastText::loadModel(const std::string& filename) {$/;"	f	class:fasttext::FastText
loadModel	src/fasttext.cc	/^void FastText::loadModel(std::istream& in) {$/;"	f	class:fasttext::FastText
loadVectors	src/fasttext.cc	/^void FastText::loadVectors(const std::string& filename) {$/;"	f	class:fasttext::FastText
load_lexicon	alignment/utils.py	/^def load_lexicon(filename, words_src, words_tgt, verbose=True):$/;"	f
load_model	python/benchmarks/get_word_vector.py	/^from fastText import load_model$/;"	i
load_model	python/doc/examples/FastTextEmbeddingBag.py	/^from fastText import load_model$/;"	i
load_model	python/doc/examples/bin_to_vec.py	/^from fastText import load_model$/;"	i
load_model	python/doc/examples/compute_accuracy.py	/^from fastText import load_model$/;"	i
load_model	python/doc/examples/get_vocab.py	/^from fastText import load_model$/;"	i
load_model	python/fastText/FastText.py	/^def load_model(path):$/;"	f
load_model	python/fastText/__init__.py	/^from .FastText import load_model$/;"	i
load_pairs	alignment/utils.py	/^def load_pairs(filename, idx_src, idx_tgt, verbose=True):$/;"	f
load_transform	alignment/eval.py	/^def load_transform(fname, d1=300, d2=300):$/;"	f
load_vectors	alignment/utils.py	/^def load_vectors(fname, maxload=200000, norm=True, center=False, verbose=True):$/;"	f
localStorageSupported	website/static/docs/en/html/navtree.js	/^function localStorageSupported()$/;"	f
log	src/meter.cc	/^void Meter::log($/;"	f	class:fasttext::Meter
log	src/model.cc	/^real Model::log(real x) const {$/;"	f	class:fasttext::Model
loss	src/args.h	/^  loss_name loss;$/;"	m	class:fasttext::Args
lossToString	src/args.cc	/^std::string Args::lossToString(loss_name ln) const {$/;"	f	class:fasttext::Args
loss_	src/model.h	/^  real loss_;$/;"	m	class:fasttext::Model
loss_name	python/fastText/FastText.py	/^loss_name = fasttext.loss_name$/;"	v
loss_name	src/args.h	/^enum class loss_name : int { hs = 1, ns, softmax, ova };$/;"	c	namespace:fasttext
lr	src/args.h	/^  double lr;$/;"	m	class:fasttext::Args
lrUpdateRate	src/args.h	/^  int lrUpdateRate;$/;"	m	class:fasttext::Args
m_	src/matrix.h	/^  const int64_t m_;$/;"	m	class:fasttext::Matrix
m_	src/qmatrix.h	/^  int64_t m_;$/;"	m	class:fasttext::QMatrix
main	cpp_test/tmp.cpp	/^int main(int argc, char *argv[])$/;"	f
main	scripts/kbcompletion/eval.cpp	/^int main(int argc, char** argv) {$/;"	f
main	src/main.cc	/^int main(int argc, char** argv) {$/;"	f
main_8cc	website/static/docs/en/html/main_8cc.js	/^var main_8cc =$/;"	v
math	eval.py	/^import math$/;"	i
max_points_	src/productquantizer.h	/^  const int32_t max_points_ = max_points_per_cluster_ * ksub_;$/;"	m	class:fasttext::ProductQuantizer
max_points_per_cluster_	src/productquantizer.h	/^  const int32_t max_points_per_cluster_ = 256;$/;"	m	class:fasttext::ProductQuantizer
max_thread	python/fastText/tests/test_configurations.py	/^def max_thread():$/;"	f
maxn	src/args.h	/^  int maxn;$/;"	m	class:fasttext::Args
menudata.children	website/static/docs/en/html/menudata.js	/^var menudata={children:[$/;"	p
minCount	src/args.h	/^  int minCount;$/;"	m	class:fasttext::Args
minCountLabel	src/args.h	/^  int minCountLabel;$/;"	m	class:fasttext::Args
minn	src/args.h	/^  int minn;$/;"	m	class:fasttext::Args
model	python/doc/examples/FastTextEmbeddingBag.py	/^    model = load_model("fil9.bin")$/;"	v
model	python/doc/examples/train_unsupervised.py	/^    model = train_unsupervised($/;"	v
model	python/fastText/FastText.py	/^    model = "supervised"$/;"	v
model	src/args.h	/^  model_name model;$/;"	m	class:fasttext::Args
modelToString	src/args.cc	/^std::string Args::modelToString(model_name mn) const {$/;"	f	class:fasttext::Args
model_	src/fasttext.h	/^  std::shared_ptr<Model> model_;$/;"	m	class:fasttext::FastText
model_8h	website/static/docs/en/html/model_8h.js	/^var model_8h =$/;"	v
model_name	python/fastText/FastText.py	/^model_name = fasttext.model_name$/;"	v
model_name	src/args.h	/^enum class model_name : int { cbow = 1, sg, sup };$/;"	c	namespace:fasttext
move	src/vector.cc	/^Vector::Vector(Vector&& other) noexcept : data_(std::move(other.data_)) {}$/;"	f	namespace:fasttext
mul	src/vector.cc	/^void Vector::mul(const Matrix& A, const Vector& vec) {$/;"	f	class:fasttext::Vector
mul	src/vector.cc	/^void Vector::mul(const QMatrix& A, const Vector& vec) {$/;"	f	class:fasttext::Vector
mul	src/vector.cc	/^void Vector::mul(real a) {$/;"	f	class:fasttext::Vector
mulcode	src/productquantizer.cc	/^real ProductQuantizer::mulcode($/;"	f	class:fasttext::ProductQuantizer
multiplyRow	src/matrix.cc	/^void Matrix::multiplyRow(const Vector& nums, int64_t ib, int64_t ie) {$/;"	f	class:fasttext::Matrix
multiprocessing	python/fastText/FastText.py	/^import multiprocessing$/;"	i
multiprocessing	python/fastText/tests/test_configurations.py	/^import multiprocessing$/;"	i
myshuf	.circleci/pull_data.sh	/^myshuf() {$/;"	f
myshuf	classification-example.sh	/^myshuf() {$/;"	f
myshuf	classification-results.sh	/^myshuf() {$/;"	f
myshuf	quantization-example.sh	/^myshuf() {$/;"	f
myshuf	tests/fetch_test_data.sh	/^myshuf() {$/;"	f
mysim	eval.py	/^mysim = []$/;"	v
n_	src/matrix.h	/^  const int64_t n_;$/;"	m	class:fasttext::Matrix
n_	src/qmatrix.h	/^  int64_t n_;$/;"	m	class:fasttext::QMatrix
namespacefasttext	website/static/docs/en/html/namespacefasttext.js	/^var namespacefasttext =$/;"	v
namespaces	website/static/docs/en/html/args_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/args_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/dictionary_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/dictionary_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/fasttext_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/fasttext_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/matrix_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/matrix_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/model_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/model_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/namespacefasttext.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/namespaces.js	/^var namespaces =$/;"	v
namespaces	website/static/docs/en/html/productquantizer_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/productquantizer_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/qmatrix_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/qmatrix_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/real_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/utils_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/utils_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/vector_8cc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	website/static/docs/en/html/vector_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
navTo	website/static/docs/en/html/navtree.js	/^function navTo(o,root,hash,relpath)$/;"	f
nbits_	src/productquantizer.h	/^  const int32_t nbits_ = 8;$/;"	m	class:fasttext::ProductQuantizer
neg	src/args.h	/^  int neg;$/;"	m	class:fasttext::Args
negativeSampling	src/model.cc	/^real Model::negativeSampling(int32_t target, real lr) {$/;"	f	class:fasttext::Model
negatives_	src/model.h	/^  std::vector<int32_t> negatives_;$/;"	m	class:fasttext::Model
negpos	src/model.h	/^  size_t negpos;$/;"	m	class:fasttext::Model
nested-classes	website/static/docs/en/html/args_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/dictionary_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/fasttext_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/matrix_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/model_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/namespacefasttext.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/productquantizer_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/qmatrix_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	website/static/docs/en/html/vector_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
newNode	website/static/docs/en/html/navtree.js	/^function newNode(o, po, text, link, childrenData, lastNode)$/;"	f
nexamples	src/meter.h	/^  uint64_t nexamples() const {$/;"	f	class:fasttext::Meter
nexamples_	src/meter.h	/^  uint64_t nexamples_;$/;"	m	class:fasttext::Meter
nexamples_	src/model.h	/^  int64_t nexamples_;$/;"	m	class:fasttext::Model
ngramVectors	src/fasttext.cc	/^void FastText::ngramVectors(std::string word) {$/;"	f	class:fasttext::FastText
niter_	src/productquantizer.h	/^  const int32_t niter_ = 25;$/;"	m	class:fasttext::ProductQuantizer
nlabels	src/dictionary.cc	/^int32_t Dictionary::nlabels() const {$/;"	f	class:fasttext::Dictionary
nlabels_	src/dictionary.h	/^  int32_t nlabels_;$/;"	m	class:fasttext::entry_type::Dictionary
nn	src/main.cc	/^void nn(const std::vector<std::string> args) {$/;"	f
nnacc	alignment/align.py	/^        nnacc = compute_nn_accuracy(np.dot(x_src, R.T), x_tgt, src2tgt, lexicon_size=lexicon_size)$/;"	v
nnacc	alignment/align.py	/^nnacc = compute_nn_accuracy(np.dot(x_src, R.T), x_tgt, src2tgt, lexicon_size=lexicon_size)$/;"	v
nnacc	alignment/eval.py	/^nnacc = compute_nn_accuracy(x_src, x_tgt, src2tgt, lexicon_size=lexicon_size)$/;"	v
node.expandToggle.onclick	website/static/docs/en/html/navtree.js	/^    node.expandToggle.href = "javascript:void(0)";$/;"	f
node.getChildrenUL	website/static/docs/en/html/navtree.js	/^  node.childrenUL = null;$/;"	f
noexcept	src/vector.h	/^  Vector(Vector&&) noexcept;$/;"	m	class:fasttext::Vector
norm	src/vector.cc	/^real Vector::norm() const {$/;"	f	class:fasttext::Vector
norm_codes_	src/qmatrix.h	/^  std::vector<uint8_t> norm_codes_;$/;"	m	class:fasttext::QMatrix
normalize_text	.circleci/pull_data.sh	/^normalize_text() {$/;"	f
normalize_text	classification-example.sh	/^normalize_text() {$/;"	f
normalize_text	classification-results.sh	/^normalize_text() {$/;"	f
normalize_text	get-wikimedia.sh	/^normalize_text() {$/;"	f
normalize_text	quantization-example.sh	/^normalize_text() {$/;"	f
normalize_text	tests/fetch_test_data.sh	/^normalize_text() {$/;"	f
np	alignment/align.py	/^import numpy as np$/;"	i
np	alignment/eval.py	/^import numpy as np$/;"	i
np	alignment/utils.py	/^import numpy as np$/;"	i
np	embs/map.py	/^import numpy as np$/;"	i
np	eval.py	/^import numpy as np$/;"	i
np	python/doc/examples/FastTextEmbeddingBag.py	/^import numpy as np$/;"	i
np	python/doc/examples/compute_accuracy.py	/^import numpy as np$/;"	i
np	python/doc/examples/train_unsupervised.py	/^import numpy as np$/;"	i
np	python/fastText/FastText.py	/^import numpy as np$/;"	i
np	python/fastText/tests/test_script.py	/^import numpy as np$/;"	i
np	python/fastText/util/util.py	/^import numpy as np$/;"	i
npq_	src/qmatrix.h	/^  std::unique_ptr<ProductQuantizer> npq_;$/;"	m	class:fasttext::QMatrix
ns	src/args.h	/^enum class loss_name : int { hs = 1, ns, softmax, ova };$/;"	m	class:fasttext::loss_name
nsubq_	src/productquantizer.h	/^  int32_t nsubq_;$/;"	m	class:fasttext::ProductQuantizer
ntokens	src/dictionary.cc	/^int64_t Dictionary::ntokens() const {$/;"	f	class:fasttext::Dictionary
ntokens_	src/dictionary.h	/^  int64_t ntokens_;$/;"	m	class:fasttext::entry_type::Dictionary
num_lines	python/doc/examples/FastTextEmbeddingBag.py	/^    num_lines = 200$/;"	v
nwords	eval.py	/^    nwords = nwords + 1.0$/;"	v
nwords	eval.py	/^nwords = 0.0$/;"	v
nwords	src/dictionary.cc	/^int32_t Dictionary::nwords() const {$/;"	f	class:fasttext::Dictionary
nwords_	src/dictionary.h	/^  int32_t nwords_;$/;"	m	class:fasttext::entry_type::Dictionary
o.node.getChildrenUL	website/static/docs/en/html/navtree.js	/^  o.node.childrenUL = document.createElement("ul");$/;"	f
oneVsAll	src/model.cc	/^real Model::oneVsAll(const std::vector<int32_t>& targets, real lr) {$/;"	f	class:fasttext::Model
operator <<	src/vector.cc	/^std::ostream& operator<<(std::ostream& os, const Vector& v) {$/;"	f	namespace:fasttext
operator =	src/vector.cc	/^Vector& Vector::operator=(Vector&& other) {$/;"	f	class:fasttext::Vector
operator []	src/vector.h	/^  inline const real& operator[](int64_t i) const {$/;"	f	class:fasttext::Vector
operator []	src/vector.h	/^  inline real& operator[](int64_t i) {$/;"	f	class:fasttext::Vector
os	embs/map.py	/^import os$/;"	i
os	eval.py	/^import os$/;"	i
os	python/doc/examples/train_supervised.py	/^import os$/;"	i
os	python/doc/examples/train_unsupervised.py	/^import os$/;"	i
os	python/fastText/tests/test_script.py	/^import os$/;"	i
os	setup.py	/^import os$/;"	i
osz_	src/model.h	/^  int32_t osz_;$/;"	m	class:fasttext::Model
output	src/args.h	/^  std::string output;$/;"	m	class:fasttext::Args
output_	src/fasttext.h	/^  std::shared_ptr<Matrix> output_;$/;"	m	class:fasttext::FastText
output_	src/model.h	/^  Vector output_;$/;"	m	class:fasttext::Model
pairs	alignment/align.py	/^pairs = load_pairs(params.dico_train, idx_src, idx_tgt)$/;"	v
params	alignment/align.py	/^params = parser.parse_args()$/;"	v
params	alignment/eval.py	/^params = parser.parse_args()$/;"	v
parent	src/model.h	/^  int32_t parent;$/;"	m	struct:fasttext::Node
parseArgs	src/args.cc	/^void Args::parseArgs(const std::vector<std::string>& args) {$/;"	f	class:fasttext::Args
parser	alignment/align.py	/^parser = argparse.ArgumentParser(description='RCSLS for supervised word alignment')$/;"	v
parser	alignment/eval.py	/^parser = argparse.ArgumentParser(description='Evaluation of word alignment')$/;"	v
parser	eval.py	/^parser = argparse.ArgumentParser(description='Process some integers.')$/;"	v
parser	python/benchmarks/get_word_vector.py	/^    parser = argparse.ArgumentParser(description='Simple benchmark for get_word_vector.')$/;"	v
parser	python/doc/examples/bin_to_vec.py	/^    parser = argparse.ArgumentParser($/;"	v
parser	python/doc/examples/get_vocab.py	/^    parser = argparse.ArgumentParser($/;"	v
parser	runtests.py	/^    parser = argparse.ArgumentParser()$/;"	v
pathName	website/static/docs/en/html/navtree.js	/^function pathName()$/;"	f
paths	src/model.h	/^  std::vector<std::vector<int32_t>> paths;$/;"	m	class:fasttext::Model
pdiscard_	src/dictionary.h	/^  std::vector<real> pdiscard_;$/;"	m	class:fasttext::entry_type::Dictionary
pq_	src/qmatrix.h	/^  std::unique_ptr<ProductQuantizer> pq_;$/;"	m	class:fasttext::QMatrix
precision	src/meter.cc	/^double Meter::precision() const {$/;"	f	class:fasttext::Meter
precision	src/meter.cc	/^double Meter::precision(int32_t i) {$/;"	f	class:fasttext::Meter
precision	src/meter.h	/^    double precision() const {$/;"	f	struct:fasttext::Meter::Metrics
precomputeWordVectors	src/fasttext.cc	/^void FastText::precomputeWordVectors(Matrix& wordVectors) {$/;"	f	class:fasttext::FastText
predict	python/fastText/FastText.py	/^    def predict(self, text, k=1, threshold=0.0):$/;"	m	class:_FastText
predict	src/fasttext.cc	/^void FastText::predict($/;"	f	class:fasttext::FastText
predict	src/main.cc	/^void predict(const std::vector<std::string>& args) {$/;"	f
predict	src/model.cc	/^void Model::predict($/;"	f	class:fasttext::Model
predictLine	src/fasttext.cc	/^bool FastText::predictLine($/;"	f	class:fasttext::FastText
predicted	src/meter.h	/^    uint64_t predicted;$/;"	m	struct:fasttext::Meter::Metrics
predictedGold	src/meter.h	/^    uint64_t predictedGold;$/;"	m	struct:fasttext::Meter::Metrics
pretrainedVectors	src/args.h	/^  std::string pretrainedVectors;$/;"	m	class:fasttext::Args
pri-attribs	website/static/docs/en/html/classfasttext_1_1Dictionary.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"><\/a>$/;"	a
pri-attribs	website/static/docs/en/html/classfasttext_1_1FastText.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"><\/a>$/;"	a
pri-attribs	website/static/docs/en/html/classfasttext_1_1Model.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"><\/a>$/;"	a
pri-attribs	website/static/docs/en/html/classfasttext_1_1ProductQuantizer.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"><\/a>$/;"	a
pri-attribs	website/static/docs/en/html/classfasttext_1_1QMatrix.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"><\/a>$/;"	a
pri-methods	website/static/docs/en/html/classfasttext_1_1Dictionary.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"><\/a>$/;"	a
pri-methods	website/static/docs/en/html/classfasttext_1_1FastText.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"><\/a>$/;"	a
pri-methods	website/static/docs/en/html/classfasttext_1_1Model.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"><\/a>$/;"	a
pri-static-attribs	website/static/docs/en/html/classfasttext_1_1Dictionary.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-attribs"><\/a>$/;"	a
pri-static-attribs	website/static/docs/en/html/classfasttext_1_1Model.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-attribs"><\/a>$/;"	a
pri-static-methods	website/static/docs/en/html/classfasttext_1_1Model.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"><\/a>$/;"	a
printAnalogiesUsage	src/main.cc	/^void printAnalogiesUsage() {$/;"	f
printBasicHelp	src/args.cc	/^void Args::printBasicHelp() {$/;"	f	class:fasttext::Args
printDictionaryHelp	src/args.cc	/^void Args::printDictionaryHelp() {$/;"	f	class:fasttext::Args
printDumpUsage	src/main.cc	/^void printDumpUsage() {$/;"	f
printHelp	src/args.cc	/^void Args::printHelp() {$/;"	f	class:fasttext::Args
printInfo	src/fasttext.cc	/^void FastText::printInfo(real progress, real loss, std::ostream& log_stream) {$/;"	f	class:fasttext::FastText
printNNUsage	src/main.cc	/^void printNNUsage() {$/;"	f
printNgrams	src/main.cc	/^void printNgrams(const std::vector<std::string> args) {$/;"	f
printPredictUsage	src/main.cc	/^void printPredictUsage() {$/;"	f
printPredictions	src/main.cc	/^void printPredictions($/;"	f
printPrintNgramsUsage	src/main.cc	/^void printPrintNgramsUsage() {$/;"	f
printPrintSentenceVectorsUsage	src/main.cc	/^void printPrintSentenceVectorsUsage() {$/;"	f
printPrintWordVectorsUsage	src/main.cc	/^void printPrintWordVectorsUsage() {$/;"	f
printQuantizationHelp	src/args.cc	/^void Args::printQuantizationHelp() {$/;"	f	class:fasttext::Args
printQuantizeUsage	src/main.cc	/^void printQuantizeUsage() {$/;"	f
printSentenceVectors	src/main.cc	/^void printSentenceVectors(const std::vector<std::string> args) {$/;"	f
printTestLabelUsage	src/main.cc	/^void printTestLabelUsage() {$/;"	f
printTestUsage	src/main.cc	/^void printTestUsage() {$/;"	f
printTrainingHelp	src/args.cc	/^void Args::printTrainingHelp() {$/;"	f	class:fasttext::Args
printUsage	src/main.cc	/^void printUsage() {$/;"	f
printWordVectors	src/main.cc	/^void printWordVectors(const std::vector<std::string> args) {$/;"	f
print_compute_accuracy_score	python/doc/examples/compute_accuracy.py	/^def print_compute_accuracy_score($/;"	f
print_function	eval.py	/^from __future__ import print_function$/;"	i
print_function	python/benchmarks/get_word_vector.py	/^from __future__ import print_function$/;"	i
print_function	python/doc/examples/FastTextEmbeddingBag.py	/^from __future__ import print_function$/;"	i
print_function	python/doc/examples/bin_to_vec.py	/^from __future__ import division, absolute_import, print_function$/;"	i
print_function	python/doc/examples/bin_to_vec.py	/^from __future__ import print_function$/;"	i
print_function	python/doc/examples/compute_accuracy.py	/^from __future__ import division, absolute_import, print_function$/;"	i
print_function	python/doc/examples/compute_accuracy.py	/^from __future__ import print_function$/;"	i
print_function	python/doc/examples/get_vocab.py	/^from __future__ import division, absolute_import, print_function$/;"	i
print_function	python/doc/examples/get_vocab.py	/^from __future__ import print_function$/;"	i
print_function	python/doc/examples/train_supervised.py	/^from __future__ import print_function$/;"	i
print_function	python/doc/examples/train_unsupervised.py	/^from __future__ import division, absolute_import, print_function$/;"	i
print_function	python/doc/examples/train_unsupervised.py	/^from __future__ import print_function$/;"	i
print_function	python/fastText/FastText.py	/^from __future__ import print_function$/;"	i
print_function	python/fastText/__init__.py	/^from __future__ import print_function$/;"	i
print_function	python/fastText/tests/__init__.py	/^from __future__ import print_function$/;"	i
print_function	python/fastText/tests/test_configurations.py	/^from __future__ import print_function$/;"	i
print_function	python/fastText/tests/test_script.py	/^from __future__ import print_function$/;"	i
print_function	python/fastText/util/__init__.py	/^from __future__ import print_function$/;"	i
print_function	python/fastText/util/util.py	/^from __future__ import print_function$/;"	i
print_function	runtests.py	/^from __future__ import print_function$/;"	i
print_function	setup.py	/^from __future__ import print_function$/;"	i
print_results	python/doc/examples/train_supervised.py	/^def print_results(N, p, r):$/;"	f
process_question	python/doc/examples/compute_accuracy.py	/^def process_question(question, cossims, model, words, vectors):$/;"	f
procrustes	alignment/utils.py	/^def procrustes(X_src, Y_tgt):$/;"	f
productquantizer_8cc	website/static/docs/en/html/productquantizer_8cc.js	/^var productquantizer_8cc =$/;"	v
proj_spectral	alignment/align.py	/^def proj_spectral(R):$/;"	f
prune	src/dictionary.cc	/^void Dictionary::prune(std::vector<int32_t>& idx) {$/;"	f	class:fasttext::Dictionary
pruneidx_	src/dictionary.h	/^  std::unordered_map<int32_t, int32_t> pruneidx_;$/;"	m	class:fasttext::entry_type::Dictionary
pruneidx_size_	src/dictionary.h	/^  int64_t pruneidx_size_;$/;"	m	class:fasttext::entry_type::Dictionary
pub-attribs	website/static/docs/en/html/classfasttext_1_1Args.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	website/static/docs/en/html/classfasttext_1_1Matrix.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	website/static/docs/en/html/classfasttext_1_1Model.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	website/static/docs/en/html/classfasttext_1_1Vector.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	website/static/docs/en/html/structfasttext_1_1Node.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	website/static/docs/en/html/structfasttext_1_1entry.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1Args.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1Dictionary.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1FastText.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1Matrix.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1Model.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1ProductQuantizer.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1QMatrix.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	website/static/docs/en/html/classfasttext_1_1Vector.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-static-attribs	website/static/docs/en/html/classfasttext_1_1Dictionary.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pushHash	src/dictionary.cc	/^void Dictionary::pushHash(std::vector<int32_t>& hashes, int32_t id) const {$/;"	f	class:fasttext::Dictionary
py_emb	python/doc/examples/FastTextEmbeddingBag.py	/^            py_emb = np.array(words_emb[i].data)$/;"	v
pybind11	setup.py	/^            import pybind11$/;"	i
pybind11	setup.py	/^        import pybind11$/;"	i
qinput_	src/fasttext.h	/^  std::shared_ptr<QMatrix> qinput_;$/;"	m	class:fasttext::FastText
qnorm	src/args.h	/^  bool qnorm;$/;"	m	class:fasttext::Args
qnorm_	src/qmatrix.h	/^  bool qnorm_;$/;"	m	class:fasttext::QMatrix
qout	src/args.h	/^  bool qout;$/;"	m	class:fasttext::Args
qoutput_	src/fasttext.h	/^  std::shared_ptr<QMatrix> qoutput_;$/;"	m	class:fasttext::FastText
quant_	src/fasttext.h	/^  bool quant_;$/;"	m	class:fasttext::FastText
quant_	src/model.h	/^  bool quant_;$/;"	m	class:fasttext::Model
quantize	python/fastText/FastText.py	/^    def quantize($/;"	m	class:_FastText
quantize	src/fasttext.cc	/^void FastText::quantize(const Args& qargs) {$/;"	f	class:fasttext::FastText
quantize	src/main.cc	/^void quantize(const std::vector<std::string>& args) {$/;"	f
quantize	src/qmatrix.cc	/^void QMatrix::quantize(const Matrix& matrix) {$/;"	f	class:fasttext::QMatrix
quantizeNorm	src/qmatrix.cc	/^void QMatrix::quantizeNorm(const Vector& norms) {$/;"	f	class:fasttext::QMatrix
qwi_	src/model.h	/^  std::shared_ptr<QMatrix> qwi_;$/;"	m	class:fasttext::Model
qwo_	src/model.h	/^  std::shared_ptr<QMatrix> qwo_;$/;"	m	class:fasttext::Model
random	python/doc/examples/FastTextEmbeddingBag.py	/^import random$/;"	i
random	python/fastText/tests/test_script.py	/^import random$/;"	i
random_word	python/doc/examples/FastTextEmbeddingBag.py	/^def random_word(N):$/;"	f
random_words	python/fastText/tests/test_script.py	/^    random_words = get_random_words($/;"	v
rcsls	alignment/align.py	/^def rcsls(X_src, Y_tgt, Z_src, Z_tgt, R, knn=10):$/;"	f
re	embs/map.py	/^import re$/;"	i
readCluster	cpp_test/tmp.cpp	/^void readCluster(std::istream& in) {$/;"	f
readFromFile	src/dictionary.cc	/^void Dictionary::readFromFile(std::istream& in) {$/;"	f	class:fasttext::Dictionary
readWord	scripts/kbcompletion/eval.cpp	/^bool readWord(std::istream& in, std::string& word)$/;"	f
readWord	src/dictionary.cc	/^bool Dictionary::readWord(std::istream& in, std::string& word) const {$/;"	f	class:fasttext::Dictionary
read_labels	python/fastText/tests/test_script.py	/^def read_labels(data_file):$/;"	f
real	src/real.h	/^typedef float real;$/;"	t	namespace:fasttext
real_8h	website/static/docs/en/html/real_8h.js	/^var real_8h =$/;"	v
recall	src/meter.cc	/^double Meter::recall() const {$/;"	f	class:fasttext::Meter
recall	src/meter.cc	/^double Meter::recall(int32_t i) {$/;"	f	class:fasttext::Meter
recall	src/meter.h	/^    double recall() const {$/;"	f	struct:fasttext::Meter::Metrics
removeToInsertLater	website/static/docs/en/html/navtree.js	/^function removeToInsertLater(element) {$/;"	f
report_error	tests/fetch_test_data.sh	/^report_error() {$/;"	f
required	eval.py	/^    required=True,$/;"	v
reset	src/dictionary.cc	/^void Dictionary::reset(std::istream& in) const {$/;"	f	class:fasttext::Dictionary
retrain	src/args.h	/^  bool retrain;$/;"	m	class:fasttext::Args
right	src/model.h	/^  int32_t right;$/;"	m	struct:fasttext::Node
rng	src/model.h	/^  std::minstd_rand rng;$/;"	m	class:fasttext::Model
rng	src/productquantizer.h	/^  std::minstd_rand rng;$/;"	m	class:fasttext::ProductQuantizer
rows	src/matrix.h	/^  inline int64_t rows() const {$/;"	f	class:fasttext::Matrix
run_tests	runtests.py	/^def run_tests(tests):$/;"	f
save	src/args.cc	/^void Args::save(std::ostream& out) {$/;"	f	class:fasttext::Args
save	src/dictionary.cc	/^void Dictionary::save(std::ostream& out) const {$/;"	f	class:fasttext::Dictionary
save	src/matrix.cc	/^void Matrix::save(std::ostream& out) {$/;"	f	class:fasttext::Matrix
save	src/productquantizer.cc	/^void ProductQuantizer::save(std::ostream& out) {$/;"	f	class:fasttext::ProductQuantizer
save	src/qmatrix.cc	/^void QMatrix::save(std::ostream& out) {$/;"	f	class:fasttext::QMatrix
saveModel	src/fasttext.cc	/^void FastText::saveModel() {$/;"	f	class:fasttext::FastText
saveModel	src/fasttext.cc	/^void FastText::saveModel(const std::string& filename) {$/;"	f	class:fasttext::FastText
saveOutput	src/args.h	/^  bool saveOutput;$/;"	m	class:fasttext::Args
saveOutput	src/fasttext.cc	/^void FastText::saveOutput() {$/;"	f	class:fasttext::FastText
saveOutput	src/fasttext.cc	/^void FastText::saveOutput(const std::string& filename) {$/;"	f	class:fasttext::FastText
saveVectors	src/fasttext.cc	/^void FastText::saveVectors() {$/;"	f	class:fasttext::FastText
saveVectors	src/fasttext.cc	/^void FastText::saveVectors(const std::string& filename) {$/;"	f	class:fasttext::FastText
save_matrix	alignment/utils.py	/^def save_matrix(fname, x):$/;"	f
save_model	python/fastText/FastText.py	/^    def save_model(self, path):$/;"	m	class:_FastText
save_vectors	alignment/utils.py	/^def save_vectors(fname, x, words):$/;"	f
script.onreadystatechange	website/static/docs/en/html/navtree.js	/^  if ($.browser.msie && $.browser.version<=8) {$/;"	f
searchData	website/static/docs/en/html/search/all_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_10.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_11.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_12.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_13.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_14.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_15.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_16.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_17.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_3.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_4.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_5.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_6.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_7.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_8.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_9.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_a.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_b.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_c.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_d.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_e.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/all_f.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_3.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_4.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_5.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_6.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_7.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/classes_8.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/defines_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/defines_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/defines_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/defines_3.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enums_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enums_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enums_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enumvalues_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enumvalues_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enumvalues_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enumvalues_3.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enumvalues_4.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/enumvalues_5.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_3.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_4.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_5.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_6.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_7.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/files_8.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_10.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_11.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_12.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_13.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_14.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_15.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_16.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_17.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_3.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_4.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_5.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_6.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_7.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_8.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_9.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_a.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_b.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_c.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_d.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_e.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/functions_f.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/namespaces_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/typedefs_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/typedefs_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_0.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_1.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_10.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_11.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_12.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_13.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_2.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_3.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_4.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_5.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_6.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_7.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_8.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_9.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_a.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_b.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_c.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_d.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_e.js	/^var searchData=$/;"	v
searchData	website/static/docs/en/html/search/variables_f.js	/^var searchData=$/;"	v
seed_	src/productquantizer.h	/^  const int32_t seed_ = 1234;$/;"	m	class:fasttext::ProductQuantizer
seek	src/utils.cc	/^void seek(std::ifstream& ifs, int64_t pos) {$/;"	f	namespace:fasttext::utils
selectAndHighlight	website/static/docs/en/html/navtree.js	/^function selectAndHighlight(hash,n)$/;"	f
selectEmbeddings	src/fasttext.cc	/^std::vector<int32_t> FastText::selectEmbeddings(int32_t cutoff) const {$/;"	f	class:fasttext::FastText
select_vectors_from_pairs	alignment/utils.py	/^def select_vectors_from_pairs(x_src, y_tgt, pairs):$/;"	f
setClassAttr	website/static/docs/en/html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setKeyActions	website/static/docs/en/html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
setQuantizePointer	src/model.cc	/^void Model::setQuantizePointer($/;"	f	class:fasttext::Model
setTargetCounts	src/model.cc	/^void Model::setTargetCounts(const std::vector<int64_t>& counts) {$/;"	f	class:fasttext::Model
setup	setup.py	/^from setuptools import setup, Extension$/;"	i
setuptools	setup.py	/^import setuptools$/;"	i
sg	src/args.h	/^enum class model_name : int { cbow = 1, sg, sup };$/;"	m	class:fasttext::model_name
showNode	website/static/docs/en/html/navtree.js	/^function showNode(o, node, index, hash)$/;"	f
showRoot	website/static/docs/en/html/navtree.js	/^function showRoot()$/;"	f
showSyncOff	website/static/docs/en/html/navtree.js	/^function showSyncOff(n,relpath)$/;"	f
showSyncOn	website/static/docs/en/html/navtree.js	/^function showSyncOn(n,relpath)$/;"	f
sigmoid	src/model.cc	/^real Model::sigmoid(real x) const {$/;"	f	class:fasttext::Model
signModel	src/fasttext.cc	/^void FastText::signModel(std::ostream& out) {$/;"	f	class:fasttext::FastText
similarity	eval.py	/^def similarity(v1, v2):$/;"	f
similarity	python/doc/examples/train_unsupervised.py	/^    def similarity(v1, v2):$/;"	f	function:compute_similarity
size	src/matrix.h	/^  inline int64_t size(int64_t dim) const {$/;"	f	class:fasttext::Matrix
size	src/utils.cc	/^int64_t size(std::ifstream& ifs) {$/;"	f	namespace:fasttext::utils
size	src/vector.h	/^  inline int64_t size() const {$/;"	f	class:fasttext::Vector
size_	src/dictionary.h	/^  int32_t size_;$/;"	m	class:fasttext::entry_type::Dictionary
skipgram	src/fasttext.cc	/^void FastText::skipgram($/;"	f	class:fasttext::FastText
softmax	src/args.h	/^enum class loss_name : int { hs = 1, ns, softmax, ova };$/;"	m	class:fasttext::loss_name
softmax	src/model.cc	/^real Model::softmax(int32_t target, real lr) {$/;"	f	class:fasttext::Model
start	python/doc/examples/FastTextEmbeddingBag.py	/^        start = time.clock()$/;"	v
startThreads	src/fasttext.cc	/^void FastText::startThreads() {$/;"	f	class:fasttext::FastText
start_	src/fasttext.h	/^  std::chrono::steady_clock::time_point start_;$/;"	m	class:fasttext::FastText
stats	eval.py	/^from scipy import stats$/;"	i
stats	python/doc/examples/train_unsupervised.py	/^from scipy import stats$/;"	i
std_log	src/model.cc	/^real Model::std_log(real x) const {$/;"	f	class:fasttext::Model
storeLink	website/static/docs/en/html/navtree.js	/^function storeLink(link)$/;"	f
string	embs/map.py	/^import string$/;"	i
string	python/doc/examples/FastTextEmbeddingBag.py	/^import string$/;"	i
stripPath	website/static/docs/en/html/navtree.js	/^function stripPath(uri)$/;"	f
stripPath2	website/static/docs/en/html/navtree.js	/^function stripPath2(uri)$/;"	f
structfasttext_1_1Node	website/static/docs/en/html/structfasttext_1_1Node.js	/^var structfasttext_1_1Node =$/;"	v
structfasttext_1_1entry	website/static/docs/en/html/structfasttext_1_1entry.js	/^var structfasttext_1_1entry =$/;"	v
subprocess	python/fastText/tests/test_script.py	/^import subprocess$/;"	i
subprocess	setup.py	/^import subprocess$/;"	i
subwords	src/dictionary.h	/^  std::vector<int32_t> subwords;$/;"	m	struct:fasttext::entry_type::entry
sup_test	python/fastText/tests/test_script.py	/^    def sup_test(self):$/;"	f	function:gen_sup_test
supervised	src/fasttext.cc	/^void FastText::supervised($/;"	f	class:fasttext::FastText
sys	embs/map.py	/^import sys$/;"	i
sys	python/benchmarks/get_word_vector.py	/^import sys$/;"	i
sys	python/fastText/tests/test_script.py	/^import sys$/;"	i
sys	setup.py	/^import sys$/;"	i
t	src/args.h	/^  double t;$/;"	m	class:fasttext::Args
t_log_	src/model.h	/^  std::vector<real> t_log_;$/;"	m	class:fasttext::Model
t_sigmoid_	src/model.h	/^  std::vector<real> t_sigmoid_;$/;"	m	class:fasttext::Model
tab	eval.py	/^        tab = compat_splitting(line)$/;"	v
tempfile	python/benchmarks/get_word_vector.py	/^import tempfile$/;"	i
tempfile	python/fastText/tests/test_script.py	/^import tempfile$/;"	i
tempfile	setup.py	/^    import tempfile$/;"	i
test	python/fastText/FastText.py	/^    def test(self, path, k=1):$/;"	m	class:_FastText
test	python/fastText/tests/test_script.py	/^            def test(self):$/;"	f	function:gen_unit_tests.build_test
test	python/fastText/util/__init__.py	/^from .util import test$/;"	i
test	python/fastText/util/util.py	/^def test(predictions, labels, k=1):$/;"	f
test	src/fasttext.cc	/^FastText::test(std::istream& in, int32_t k, real threshold) {$/;"	f	class:fasttext::FastText
test	src/fasttext.cc	/^void FastText::test(std::istream& in, int32_t k, real threshold, Meter& meter)$/;"	f	class:fasttext::FastText
test	src/main.cc	/^void test(const std::vector<std::string>& args) {$/;"	f
test_label	python/fastText/FastText.py	/^    def test_label(self, path, k=1, threshold=0.0):$/;"	m	class:_FastText
thread	src/args.h	/^  int thread;$/;"	m	class:fasttext::Args
threshold	src/dictionary.cc	/^void Dictionary::threshold(int64_t t, int64_t tl) {$/;"	f	class:fasttext::Dictionary
time	python/benchmarks/get_word_vector.py	/^import time$/;"	i
time	python/doc/examples/FastTextEmbeddingBag.py	/^import time$/;"	i
tline	eval.py	/^    tline = compat_splitting(line)$/;"	v
toggleFolder	website/static/docs/en/html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	website/static/docs/en/html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	website/static/docs/en/html/dynsections.js	/^function toggleLevel(level)$/;"	f
toggleSyncButton	website/static/docs/en/html/navtree.js	/^function toggleSyncButton(relpath)$/;"	f
toggleVisibility	website/static/docs/en/html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
tokenize	python/benchmarks/get_word_vector.py	/^from fastText import tokenize$/;"	i
tokenize	python/fastText/FastText.py	/^def tokenize(text):$/;"	f
tokenize	python/fastText/__init__.py	/^from .FastText import tokenize$/;"	i
torch	python/doc/examples/FastTextEmbeddingBag.py	/^import torch$/;"	i
total_seconds	python/doc/examples/FastTextEmbeddingBag.py	/^    total_seconds = 0.0$/;"	v
total_words	python/doc/examples/FastTextEmbeddingBag.py	/^    total_words = 0$/;"	v
train	src/fasttext.cc	/^void FastText::train(const Args& args) {$/;"	f	class:fasttext::FastText
train	src/main.cc	/^void train(const std::vector<std::string> args) {$/;"	f
train	src/productquantizer.cc	/^void ProductQuantizer::train(int32_t n, const real* x) {$/;"	f	class:fasttext::ProductQuantizer
trainThread	src/fasttext.cc	/^void FastText::trainThread(int32_t threadId) {$/;"	f	class:fasttext::FastText
train_supervised	python/doc/examples/train_supervised.py	/^from fastText import train_supervised$/;"	i
train_supervised	python/fastText/FastText.py	/^def train_supervised($/;"	f
train_supervised	python/fastText/__init__.py	/^from .FastText import train_supervised$/;"	i
train_supervised	python/fastText/tests/test_script.py	/^from fastText import train_supervised$/;"	i
train_unsupervised	python/doc/examples/train_unsupervised.py	/^from fastText import train_unsupervised$/;"	i
train_unsupervised	python/fastText/FastText.py	/^def train_unsupervised($/;"	f
train_unsupervised	python/fastText/__init__.py	/^from .FastText import train_unsupervised$/;"	i
train_unsupervised	python/fastText/tests/test_script.py	/^from fastText import train_unsupervised$/;"	i
tree	src/model.h	/^  std::vector<Node> tree;$/;"	m	class:fasttext::Model
type	runtests.py	/^        type=int,$/;"	v
type	src/dictionary.h	/^  entry_type type;$/;"	m	struct:fasttext::entry_type::entry
typedef-members	website/static/docs/en/html/dictionary_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	website/static/docs/en/html/namespacefasttext.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	website/static/docs/en/html/real_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
unicode	python/fastText/tests/test_script.py	/^    import unicode$/;"	i
unicode_literals	eval.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/benchmarks/get_word_vector.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/doc/examples/FastTextEmbeddingBag.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/doc/examples/bin_to_vec.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/doc/examples/compute_accuracy.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/doc/examples/get_vocab.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/doc/examples/train_supervised.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/doc/examples/train_unsupervised.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/fastText/FastText.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/fastText/__init__.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/fastText/tests/__init__.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/fastText/tests/test_configurations.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/fastText/tests/test_script.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/fastText/util/__init__.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	python/fastText/util/util.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	runtests.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	setup.py	/^from __future__ import unicode_literals$/;"	i
uniform	src/matrix.cc	/^void Matrix::uniform(real a) {$/;"	f	class:fasttext::Matrix
unittest	python/fastText/tests/test_script.py	/^import unittest$/;"	i
unittest	runtests.py	/^import unittest$/;"	i
update	src/model.cc	/^void Model::update($/;"	f	class:fasttext::Model
updateStripes	website/static/docs/en/html/dynsections.js	/^function updateStripes()$/;"	f
util	python/doc/examples/compute_accuracy.py	/^from fastText import util$/;"	i
util	python/fastText/tests/test_script.py	/^from fastText import util$/;"	i
utils	src/utils.cc	/^namespace utils {$/;"	n	namespace:fasttext	file:
utils	src/utils.h	/^namespace utils {$/;"	n	namespace:fasttext
utils_8cc	website/static/docs/en/html/utils_8cc.js	/^var utils_8cc =$/;"	v
utils_8h	website/static/docs/en/html/utils_8h.js	/^var utils_8h =$/;"	v
v	python/doc/examples/bin_to_vec.py	/^        v = f.get_word_vector(w)$/;"	v
v1	eval.py	/^        v1 = vectors[word1]$/;"	v
v2	eval.py	/^        v2 = vectors[word2]$/;"	v
vec	eval.py	/^        vec = np.array(tab[1:], dtype=float)$/;"	v
vector_8cc	website/static/docs/en/html/vector_8cc.js	/^var vector_8cc =$/;"	v
vector_8h	website/static/docs/en/html/vector_8h.js	/^var vector_8h =$/;"	v
vectors	eval.py	/^vectors = {}$/;"	v
verbose	src/args.h	/^  int verbose;$/;"	m	class:fasttext::Args
version	src/fasttext.h	/^  int32_t version;$/;"	m	class:fasttext::FastText
vstr	python/doc/examples/bin_to_vec.py	/^        vstr = ""$/;"	v
wi_	src/model.h	/^  std::shared_ptr<Matrix> wi_;$/;"	m	class:fasttext::Model
wo_	src/model.h	/^  std::shared_ptr<Matrix> wo_;$/;"	m	class:fasttext::Model
word	embs/map.py	/^            word = line.split()[0]$/;"	v
word	eval.py	/^        word = tab[0]$/;"	v
word	python/doc/examples/FastTextEmbeddingBag.py	/^            word = words[i]$/;"	v
word	src/dictionary.h	/^  std::string word;$/;"	m	struct:fasttext::entry_type::entry
word	src/dictionary.h	/^enum class entry_type : int8_t { word = 0, label = 1 };$/;"	m	class:fasttext::entry_type
word1	eval.py	/^    word1 = tline[0].lower()$/;"	v
word2	eval.py	/^    word2 = tline[1].lower()$/;"	v
word2int_	src/dictionary.h	/^  std::vector<int32_t> word2int_;$/;"	m	class:fasttext::entry_type::Dictionary
wordNgrams	src/args.h	/^  int wordNgrams;$/;"	m	class:fasttext::Args
wordVectors_	src/fasttext.h	/^  std::unique_ptr<Matrix> wordVectors_;$/;"	m	class:fasttext::FastText
words	python/doc/examples/FastTextEmbeddingBag.py	/^        words = [$/;"	v
words	python/doc/examples/bin_to_vec.py	/^    words = f.get_words()$/;"	v
words_	src/dictionary.h	/^  std::vector<entry> words_;$/;"	m	class:fasttext::entry_type::Dictionary
words_average_length	python/doc/examples/FastTextEmbeddingBag.py	/^        words_average_length = sum([len(word) for word in words]) \/ len(words)$/;"	v
words_emb	python/doc/examples/FastTextEmbeddingBag.py	/^        words_emb = ft_emb(words)$/;"	v
writeGeneralMetrics	src/meter.cc	/^void Meter::writeGeneralMetrics(std::ostream& out, int32_t k) const {$/;"	f	class:fasttext::Meter
ws	src/args.h	/^  int ws;$/;"	m	class:fasttext::Args
x	alignment/align.py	/^    x = np.dot(x_full, R.T)$/;"	v
x_src	alignment/eval.py	/^    x_src = np.dot(x_src, R_src)$/;"	v
x_tgt	alignment/eval.py	/^    x_tgt = np.dot(x_tgt, R_tgt)$/;"	v
zero	src/matrix.cc	/^void Matrix::zero() {$/;"	f	class:fasttext::Matrix
zero	src/vector.cc	/^void Vector::zero() {$/;"	f	class:fasttext::Vector
